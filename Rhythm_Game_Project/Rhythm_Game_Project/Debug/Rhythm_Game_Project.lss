
Rhythm_Game_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000004ae  00800100  000015b0  00001644  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000015b0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000049f  008005ae  008005ae  00001af2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001af2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b24  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  00001b68  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d7a  00000000  00000000  00001ce0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aed  00000000  00000000  00003a5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000012d1  00000000  00000000  00004547  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000035c  00000000  00000000  00005818  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009ad  00000000  00000000  00005b74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e89  00000000  00000000  00006521  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  000073aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	50 c0       	rjmp	.+160    	; 0xa2 <__ctors_end>
       2:	00 00       	nop
       4:	6c c0       	rjmp	.+216    	; 0xde <__bad_interrupt>
       6:	00 00       	nop
       8:	6a c0       	rjmp	.+212    	; 0xde <__bad_interrupt>
       a:	00 00       	nop
       c:	68 c0       	rjmp	.+208    	; 0xde <__bad_interrupt>
       e:	00 00       	nop
      10:	66 c0       	rjmp	.+204    	; 0xde <__bad_interrupt>
      12:	00 00       	nop
      14:	64 c0       	rjmp	.+200    	; 0xde <__bad_interrupt>
      16:	00 00       	nop
      18:	62 c0       	rjmp	.+196    	; 0xde <__bad_interrupt>
      1a:	00 00       	nop
      1c:	60 c0       	rjmp	.+192    	; 0xde <__bad_interrupt>
      1e:	00 00       	nop
      20:	5e c0       	rjmp	.+188    	; 0xde <__bad_interrupt>
      22:	00 00       	nop
      24:	5c c0       	rjmp	.+184    	; 0xde <__bad_interrupt>
      26:	00 00       	nop
      28:	5a c0       	rjmp	.+180    	; 0xde <__bad_interrupt>
      2a:	00 00       	nop
      2c:	58 c0       	rjmp	.+176    	; 0xde <__bad_interrupt>
      2e:	00 00       	nop
      30:	56 c0       	rjmp	.+172    	; 0xde <__bad_interrupt>
      32:	00 00       	nop
      34:	42 c5       	rjmp	.+2692   	; 0xaba <__vector_13>
      36:	00 00       	nop
      38:	52 c0       	rjmp	.+164    	; 0xde <__bad_interrupt>
      3a:	00 00       	nop
      3c:	50 c0       	rjmp	.+160    	; 0xde <__bad_interrupt>
      3e:	00 00       	nop
      40:	4e c0       	rjmp	.+156    	; 0xde <__bad_interrupt>
      42:	00 00       	nop
      44:	4c c0       	rjmp	.+152    	; 0xde <__bad_interrupt>
      46:	00 00       	nop
      48:	4a c0       	rjmp	.+148    	; 0xde <__bad_interrupt>
      4a:	00 00       	nop
      4c:	48 c0       	rjmp	.+144    	; 0xde <__bad_interrupt>
      4e:	00 00       	nop
      50:	46 c0       	rjmp	.+140    	; 0xde <__bad_interrupt>
      52:	00 00       	nop
      54:	44 c0       	rjmp	.+136    	; 0xde <__bad_interrupt>
      56:	00 00       	nop
      58:	42 c0       	rjmp	.+132    	; 0xde <__bad_interrupt>
      5a:	00 00       	nop
      5c:	40 c0       	rjmp	.+128    	; 0xde <__bad_interrupt>
      5e:	00 00       	nop
      60:	3e c0       	rjmp	.+124    	; 0xde <__bad_interrupt>
      62:	00 00       	nop
      64:	3c c0       	rjmp	.+120    	; 0xde <__bad_interrupt>
      66:	00 00       	nop
      68:	3a c0       	rjmp	.+116    	; 0xde <__bad_interrupt>
      6a:	00 00       	nop
      6c:	38 c0       	rjmp	.+112    	; 0xde <__bad_interrupt>
      6e:	00 00       	nop
      70:	36 c0       	rjmp	.+108    	; 0xde <__bad_interrupt>
      72:	00 00       	nop
      74:	34 c0       	rjmp	.+104    	; 0xde <__bad_interrupt>
      76:	00 00       	nop
      78:	32 c0       	rjmp	.+100    	; 0xde <__bad_interrupt>
      7a:	00 00       	nop
      7c:	30 c0       	rjmp	.+96     	; 0xde <__bad_interrupt>
      7e:	00 00       	nop
      80:	2e c0       	rjmp	.+92     	; 0xde <__bad_interrupt>
      82:	00 00       	nop
      84:	2c c0       	rjmp	.+88     	; 0xde <__bad_interrupt>
      86:	00 00       	nop
      88:	2a c0       	rjmp	.+84     	; 0xde <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ef 02       	muls	r30, r31
      8e:	d6 01       	movw	r26, r12
      90:	ef 01       	movw	r28, r30
      92:	01 02       	muls	r16, r17
      94:	4d 02       	muls	r20, r29
      96:	5f 02       	muls	r21, r31
      98:	82 02       	muls	r24, r18
      9a:	93 02       	muls	r25, r19
      9c:	a1 02       	muls	r26, r17
      9e:	ab 02       	muls	r26, r27
      a0:	c3 02       	muls	r28, r19

000000a2 <__ctors_end>:
      a2:	11 24       	eor	r1, r1
      a4:	1f be       	out	0x3f, r1	; 63
      a6:	cf ef       	ldi	r28, 0xFF	; 255
      a8:	d0 e4       	ldi	r29, 0x40	; 64
      aa:	de bf       	out	0x3e, r29	; 62
      ac:	cd bf       	out	0x3d, r28	; 61

000000ae <__do_copy_data>:
      ae:	15 e0       	ldi	r17, 0x05	; 5
      b0:	a0 e0       	ldi	r26, 0x00	; 0
      b2:	b1 e0       	ldi	r27, 0x01	; 1
      b4:	e0 eb       	ldi	r30, 0xB0	; 176
      b6:	f5 e1       	ldi	r31, 0x15	; 21
      b8:	00 e0       	ldi	r16, 0x00	; 0
      ba:	0b bf       	out	0x3b, r16	; 59
      bc:	02 c0       	rjmp	.+4      	; 0xc2 <__do_copy_data+0x14>
      be:	07 90       	elpm	r0, Z+
      c0:	0d 92       	st	X+, r0
      c2:	ae 3a       	cpi	r26, 0xAE	; 174
      c4:	b1 07       	cpc	r27, r17
      c6:	d9 f7       	brne	.-10     	; 0xbe <__do_copy_data+0x10>

000000c8 <__do_clear_bss>:
      c8:	2a e0       	ldi	r18, 0x0A	; 10
      ca:	ae ea       	ldi	r26, 0xAE	; 174
      cc:	b5 e0       	ldi	r27, 0x05	; 5
      ce:	01 c0       	rjmp	.+2      	; 0xd2 <.do_clear_bss_start>

000000d0 <.do_clear_bss_loop>:
      d0:	1d 92       	st	X+, r1

000000d2 <.do_clear_bss_start>:
      d2:	ad 34       	cpi	r26, 0x4D	; 77
      d4:	b2 07       	cpc	r27, r18
      d6:	e1 f7       	brne	.-8      	; 0xd0 <.do_clear_bss_loop>
      d8:	b7 d7       	rcall	.+3950   	; 0x1048 <main>
      da:	0c 94 d6 0a 	jmp	0x15ac	; 0x15ac <_exit>

000000de <__bad_interrupt>:
      de:	90 cf       	rjmp	.-224    	; 0x0 <__vectors>

000000e0 <Left_Tick>:
unsigned char Set_Bit(unsigned char output, unsigned char in){
    return (output | (1 << in));   
}
unsigned char Clear_Bit(unsigned char output, unsigned char in){
    return (output & ~(1 << in));
} 
      e0:	82 30       	cpi	r24, 0x02	; 2
      e2:	91 05       	cpc	r25, r1
      e4:	18 f0       	brcs	.+6      	; 0xec <Left_Tick+0xc>
      e6:	81 30       	cpi	r24, 0x01	; 1
      e8:	91 05       	cpc	r25, r1
      ea:	61 f4       	brne	.+24     	; 0x104 <Left_Tick+0x24>
      ec:	03 99       	sbic	0x00, 3	; 0
      ee:	06 c0       	rjmp	.+12     	; 0xfc <Left_Tick+0x1c>
      f0:	81 e0       	ldi	r24, 0x01	; 1
      f2:	80 93 cb 05 	sts	0x05CB, r24	; 0x8005cb <LEFT>
      f6:	81 e0       	ldi	r24, 0x01	; 1
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	08 95       	ret
      fc:	10 92 cb 05 	sts	0x05CB, r1	; 0x8005cb <LEFT>
     100:	81 e0       	ldi	r24, 0x01	; 1
     102:	90 e0       	ldi	r25, 0x00	; 0
     104:	08 95       	ret

00000106 <Right_Tick>:
     106:	82 30       	cpi	r24, 0x02	; 2
     108:	91 05       	cpc	r25, r1
     10a:	18 f0       	brcs	.+6      	; 0x112 <Right_Tick+0xc>
     10c:	81 30       	cpi	r24, 0x01	; 1
     10e:	91 05       	cpc	r25, r1
     110:	61 f4       	brne	.+24     	; 0x12a <Right_Tick+0x24>
     112:	00 99       	sbic	0x00, 0	; 0
     114:	06 c0       	rjmp	.+12     	; 0x122 <Right_Tick+0x1c>
     116:	81 e0       	ldi	r24, 0x01	; 1
     118:	80 93 ca 05 	sts	0x05CA, r24	; 0x8005ca <RIGHT>
     11c:	81 e0       	ldi	r24, 0x01	; 1
     11e:	90 e0       	ldi	r25, 0x00	; 0
     120:	08 95       	ret
     122:	10 92 ca 05 	sts	0x05CA, r1	; 0x8005ca <RIGHT>
     126:	81 e0       	ldi	r24, 0x01	; 1
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	08 95       	ret

0000012c <Up_Tick>:
     12c:	82 30       	cpi	r24, 0x02	; 2
     12e:	91 05       	cpc	r25, r1
     130:	18 f0       	brcs	.+6      	; 0x138 <Up_Tick+0xc>
     132:	81 30       	cpi	r24, 0x01	; 1
     134:	91 05       	cpc	r25, r1
     136:	61 f4       	brne	.+24     	; 0x150 <Up_Tick+0x24>
     138:	01 99       	sbic	0x00, 1	; 0
     13a:	06 c0       	rjmp	.+12     	; 0x148 <Up_Tick+0x1c>
     13c:	81 e0       	ldi	r24, 0x01	; 1
     13e:	80 93 c9 05 	sts	0x05C9, r24	; 0x8005c9 <UP>
     142:	81 e0       	ldi	r24, 0x01	; 1
     144:	90 e0       	ldi	r25, 0x00	; 0
     146:	08 95       	ret
     148:	10 92 c9 05 	sts	0x05C9, r1	; 0x8005c9 <UP>
     14c:	81 e0       	ldi	r24, 0x01	; 1
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	08 95       	ret

00000152 <Down_Tick>:
     152:	82 30       	cpi	r24, 0x02	; 2
     154:	91 05       	cpc	r25, r1
     156:	18 f0       	brcs	.+6      	; 0x15e <Down_Tick+0xc>
     158:	81 30       	cpi	r24, 0x01	; 1
     15a:	91 05       	cpc	r25, r1
     15c:	61 f4       	brne	.+24     	; 0x176 <Down_Tick+0x24>
     15e:	02 99       	sbic	0x00, 2	; 0
     160:	06 c0       	rjmp	.+12     	; 0x16e <Down_Tick+0x1c>
     162:	81 e0       	ldi	r24, 0x01	; 1
     164:	80 93 c8 05 	sts	0x05C8, r24	; 0x8005c8 <DOWN>
     168:	81 e0       	ldi	r24, 0x01	; 1
     16a:	90 e0       	ldi	r25, 0x00	; 0
     16c:	08 95       	ret
     16e:	10 92 c8 05 	sts	0x05C8, r1	; 0x8005c8 <DOWN>
     172:	81 e0       	ldi	r24, 0x01	; 1
     174:	90 e0       	ldi	r25, 0x00	; 0
     176:	08 95       	ret

00000178 <Player_Tick>:
     178:	82 30       	cpi	r24, 0x02	; 2
     17a:	91 05       	cpc	r25, r1
     17c:	18 f0       	brcs	.+6      	; 0x184 <Player_Tick+0xc>
     17e:	01 97       	sbiw	r24, 0x01	; 1
     180:	09 f0       	breq	.+2      	; 0x184 <Player_Tick+0xc>
     182:	43 c0       	rjmp	.+134    	; 0x20a <Player_Tick+0x92>
     184:	80 91 cb 05 	lds	r24, 0x05CB	; 0x8005cb <LEFT>
     188:	88 23       	and	r24, r24
     18a:	81 f0       	breq	.+32     	; 0x1ac <Player_Tick+0x34>
     18c:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <RIGHT>
     190:	81 11       	cpse	r24, r1
     192:	30 c0       	rjmp	.+96     	; 0x1f4 <Player_Tick+0x7c>
     194:	80 91 c9 05 	lds	r24, 0x05C9	; 0x8005c9 <UP>
     198:	81 11       	cpse	r24, r1
     19a:	2c c0       	rjmp	.+88     	; 0x1f4 <Player_Tick+0x7c>
     19c:	80 91 c8 05 	lds	r24, 0x05C8	; 0x8005c8 <DOWN>
     1a0:	81 11       	cpse	r24, r1
     1a2:	28 c0       	rjmp	.+80     	; 0x1f4 <Player_Tick+0x7c>
     1a4:	88 e0       	ldi	r24, 0x08	; 8
     1a6:	80 93 c5 05 	sts	0x05C5, r24	; 0x8005c5 <player_button_press>
     1aa:	2f c0       	rjmp	.+94     	; 0x20a <Player_Tick+0x92>
     1ac:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <RIGHT>
     1b0:	81 11       	cpse	r24, r1
     1b2:	28 c0       	rjmp	.+80     	; 0x204 <Player_Tick+0x8c>
     1b4:	80 91 c9 05 	lds	r24, 0x05C9	; 0x8005c9 <UP>
     1b8:	81 11       	cpse	r24, r1
     1ba:	1f c0       	rjmp	.+62     	; 0x1fa <Player_Tick+0x82>
     1bc:	80 91 c8 05 	lds	r24, 0x05C8	; 0x8005c8 <DOWN>
     1c0:	88 23       	and	r24, r24
     1c2:	d9 f0       	breq	.+54     	; 0x1fa <Player_Tick+0x82>
     1c4:	84 e0       	ldi	r24, 0x04	; 4
     1c6:	80 93 c5 05 	sts	0x05C5, r24	; 0x8005c5 <player_button_press>
     1ca:	1f c0       	rjmp	.+62     	; 0x20a <Player_Tick+0x92>
     1cc:	80 91 c8 05 	lds	r24, 0x05C8	; 0x8005c8 <DOWN>
     1d0:	81 11       	cpse	r24, r1
     1d2:	10 c0       	rjmp	.+32     	; 0x1f4 <Player_Tick+0x7c>
     1d4:	82 e0       	ldi	r24, 0x02	; 2
     1d6:	80 93 c5 05 	sts	0x05C5, r24	; 0x8005c5 <player_button_press>
     1da:	17 c0       	rjmp	.+46     	; 0x20a <Player_Tick+0x92>
     1dc:	80 91 c9 05 	lds	r24, 0x05C9	; 0x8005c9 <UP>
     1e0:	81 11       	cpse	r24, r1
     1e2:	08 c0       	rjmp	.+16     	; 0x1f4 <Player_Tick+0x7c>
     1e4:	80 91 c8 05 	lds	r24, 0x05C8	; 0x8005c8 <DOWN>
     1e8:	81 11       	cpse	r24, r1
     1ea:	04 c0       	rjmp	.+8      	; 0x1f4 <Player_Tick+0x7c>
     1ec:	81 e0       	ldi	r24, 0x01	; 1
     1ee:	80 93 c5 05 	sts	0x05C5, r24	; 0x8005c5 <player_button_press>
     1f2:	0b c0       	rjmp	.+22     	; 0x20a <Player_Tick+0x92>
     1f4:	10 92 c5 05 	sts	0x05C5, r1	; 0x8005c5 <player_button_press>
     1f8:	08 c0       	rjmp	.+16     	; 0x20a <Player_Tick+0x92>
     1fa:	80 91 c9 05 	lds	r24, 0x05C9	; 0x8005c9 <UP>
     1fe:	81 11       	cpse	r24, r1
     200:	e5 cf       	rjmp	.-54     	; 0x1cc <Player_Tick+0x54>
     202:	f8 cf       	rjmp	.-16     	; 0x1f4 <Player_Tick+0x7c>
     204:	81 11       	cpse	r24, r1
     206:	ea cf       	rjmp	.-44     	; 0x1dc <Player_Tick+0x64>
     208:	f5 cf       	rjmp	.-22     	; 0x1f4 <Player_Tick+0x7c>
     20a:	80 e0       	ldi	r24, 0x00	; 0
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	08 95       	ret

00000210 <delay_ms>:
     210:	18 16       	cp	r1, r24
     212:	19 06       	cpc	r1, r25
     214:	5c f0       	brlt	.+22     	; 0x22c <delay_ms+0x1c>
     216:	08 95       	ret
     218:	00 00       	nop
     21a:	21 50       	subi	r18, 0x01	; 1
     21c:	31 09       	sbc	r19, r1
     21e:	e1 f7       	brne	.-8      	; 0x218 <delay_ms+0x8>
     220:	4f 5f       	subi	r20, 0xFF	; 255
     222:	5f 4f       	sbci	r21, 0xFF	; 255
     224:	84 17       	cp	r24, r20
     226:	95 07       	cpc	r25, r21
     228:	19 f4       	brne	.+6      	; 0x230 <delay_ms+0x20>
     22a:	08 95       	ret
     22c:	40 e0       	ldi	r20, 0x00	; 0
     22e:	50 e0       	ldi	r21, 0x00	; 0
     230:	27 e0       	ldi	r18, 0x07	; 7
     232:	33 e0       	ldi	r19, 0x03	; 3
     234:	f1 cf       	rjmp	.-30     	; 0x218 <delay_ms+0x8>

00000236 <LCD_WriteCommand>:
     236:	28 98       	cbi	0x05, 0	; 5
     238:	8b b9       	out	0x0b, r24	; 11
     23a:	29 9a       	sbi	0x05, 1	; 5
     23c:	00 00       	nop
     23e:	29 98       	cbi	0x05, 1	; 5
     240:	82 e0       	ldi	r24, 0x02	; 2
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	e5 cf       	rjmp	.-54     	; 0x210 <delay_ms>
     246:	08 95       	ret

00000248 <LCD_ClearScreen>:
     248:	81 e0       	ldi	r24, 0x01	; 1
     24a:	f5 cf       	rjmp	.-22     	; 0x236 <LCD_WriteCommand>
     24c:	08 95       	ret

0000024e <LCD_Cursor>:
     24e:	81 31       	cpi	r24, 0x11	; 17
     250:	18 f4       	brcc	.+6      	; 0x258 <LCD_Cursor+0xa>
     252:	81 58       	subi	r24, 0x81	; 129
     254:	f0 cf       	rjmp	.-32     	; 0x236 <LCD_WriteCommand>
     256:	08 95       	ret
     258:	81 55       	subi	r24, 0x51	; 81
     25a:	ed cf       	rjmp	.-38     	; 0x236 <LCD_WriteCommand>
     25c:	08 95       	ret

0000025e <LCD_WriteData>:
     25e:	28 9a       	sbi	0x05, 0	; 5
     260:	8b b9       	out	0x0b, r24	; 11
     262:	29 9a       	sbi	0x05, 1	; 5
     264:	00 00       	nop
     266:	29 98       	cbi	0x05, 1	; 5
     268:	81 e0       	ldi	r24, 0x01	; 1
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	d1 cf       	rjmp	.-94     	; 0x210 <delay_ms>
     26e:	08 95       	ret

00000270 <LCD_DisplayString>:
     270:	0f 93       	push	r16
     272:	1f 93       	push	r17
     274:	cf 93       	push	r28
     276:	df 93       	push	r29
     278:	18 2f       	mov	r17, r24
     27a:	eb 01       	movw	r28, r22
     27c:	e5 df       	rcall	.-54     	; 0x248 <LCD_ClearScreen>
     27e:	88 81       	ld	r24, Y
     280:	88 23       	and	r24, r24
     282:	51 f0       	breq	.+20     	; 0x298 <LCD_DisplayString+0x28>
     284:	01 e0       	ldi	r16, 0x01	; 1
     286:	01 0f       	add	r16, r17
     288:	81 2f       	mov	r24, r17
     28a:	e1 df       	rcall	.-62     	; 0x24e <LCD_Cursor>
     28c:	89 91       	ld	r24, Y+
     28e:	e7 df       	rcall	.-50     	; 0x25e <LCD_WriteData>
     290:	10 2f       	mov	r17, r16
     292:	88 81       	ld	r24, Y
     294:	81 11       	cpse	r24, r1
     296:	f6 cf       	rjmp	.-20     	; 0x284 <LCD_DisplayString+0x14>
     298:	df 91       	pop	r29
     29a:	cf 91       	pop	r28
     29c:	1f 91       	pop	r17
     29e:	0f 91       	pop	r16
     2a0:	08 95       	ret

000002a2 <LCD_Write_Single_Line>:
     2a2:	1f 93       	push	r17
     2a4:	cf 93       	push	r28
     2a6:	df 93       	push	r29
     2a8:	62 30       	cpi	r22, 0x02	; 2
     2aa:	71 05       	cpc	r23, r1
     2ac:	09 f4       	brne	.+2      	; 0x2b0 <LCD_Write_Single_Line+0xe>
     2ae:	80 5f       	subi	r24, 0xF0	; 240
     2b0:	fa 01       	movw	r30, r20
     2b2:	90 81       	ld	r25, Z
     2b4:	99 23       	and	r25, r25
     2b6:	51 f0       	breq	.+20     	; 0x2cc <LCD_Write_Single_Line+0x2a>
     2b8:	ea 01       	movw	r28, r20
     2ba:	11 e0       	ldi	r17, 0x01	; 1
     2bc:	18 0f       	add	r17, r24
     2be:	c7 df       	rcall	.-114    	; 0x24e <LCD_Cursor>
     2c0:	89 91       	ld	r24, Y+
     2c2:	cd df       	rcall	.-102    	; 0x25e <LCD_WriteData>
     2c4:	81 2f       	mov	r24, r17
     2c6:	98 81       	ld	r25, Y
     2c8:	91 11       	cpse	r25, r1
     2ca:	f7 cf       	rjmp	.-18     	; 0x2ba <LCD_Write_Single_Line+0x18>
     2cc:	df 91       	pop	r29
     2ce:	cf 91       	pop	r28
     2d0:	1f 91       	pop	r17
     2d2:	08 95       	ret

000002d4 <LCD_Custom_Character>:
     2d4:	0f 93       	push	r16
     2d6:	1f 93       	push	r17
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	8b 01       	movw	r16, r22
     2de:	88 30       	cpi	r24, 0x08	; 8
     2e0:	68 f4       	brcc	.+26     	; 0x2fc <LCD_Custom_Character+0x28>
     2e2:	88 0f       	add	r24, r24
     2e4:	88 0f       	add	r24, r24
     2e6:	88 0f       	add	r24, r24
     2e8:	80 5c       	subi	r24, 0xC0	; 192
     2ea:	a5 df       	rcall	.-182    	; 0x236 <LCD_WriteCommand>
     2ec:	e8 01       	movw	r28, r16
     2ee:	08 5f       	subi	r16, 0xF8	; 248
     2f0:	1f 4f       	sbci	r17, 0xFF	; 255
     2f2:	89 91       	ld	r24, Y+
     2f4:	b4 df       	rcall	.-152    	; 0x25e <LCD_WriteData>
     2f6:	c0 17       	cp	r28, r16
     2f8:	d1 07       	cpc	r29, r17
     2fa:	d9 f7       	brne	.-10     	; 0x2f2 <LCD_Custom_Character+0x1e>
     2fc:	80 e8       	ldi	r24, 0x80	; 128
     2fe:	9b df       	rcall	.-202    	; 0x236 <LCD_WriteCommand>
     300:	df 91       	pop	r29
     302:	cf 91       	pop	r28
     304:	1f 91       	pop	r17
     306:	0f 91       	pop	r16
     308:	08 95       	ret

0000030a <LCD_init>:
     30a:	84 e6       	ldi	r24, 0x64	; 100
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	80 df       	rcall	.-256    	; 0x210 <delay_ms>
     310:	88 e3       	ldi	r24, 0x38	; 56
     312:	91 df       	rcall	.-222    	; 0x236 <LCD_WriteCommand>
     314:	86 e0       	ldi	r24, 0x06	; 6
     316:	8f df       	rcall	.-226    	; 0x236 <LCD_WriteCommand>
     318:	8f e0       	ldi	r24, 0x0F	; 15
     31a:	8d df       	rcall	.-230    	; 0x236 <LCD_WriteCommand>
     31c:	81 e0       	ldi	r24, 0x01	; 1
     31e:	8b df       	rcall	.-234    	; 0x236 <LCD_WriteCommand>
     320:	8a e0       	ldi	r24, 0x0A	; 10
     322:	90 e0       	ldi	r25, 0x00	; 0
     324:	75 df       	rcall	.-278    	; 0x210 <delay_ms>
     326:	6e e4       	ldi	r22, 0x4E	; 78
     328:	75 e0       	ldi	r23, 0x05	; 5
     32a:	80 e0       	ldi	r24, 0x00	; 0
     32c:	d3 df       	rcall	.-90     	; 0x2d4 <LCD_Custom_Character>
     32e:	66 e4       	ldi	r22, 0x46	; 70
     330:	75 e0       	ldi	r23, 0x05	; 5
     332:	81 e0       	ldi	r24, 0x01	; 1
     334:	cf df       	rcall	.-98     	; 0x2d4 <LCD_Custom_Character>
     336:	6e e3       	ldi	r22, 0x3E	; 62
     338:	75 e0       	ldi	r23, 0x05	; 5
     33a:	82 e0       	ldi	r24, 0x02	; 2
     33c:	cb df       	rcall	.-106    	; 0x2d4 <LCD_Custom_Character>
     33e:	66 e3       	ldi	r22, 0x36	; 54
     340:	75 e0       	ldi	r23, 0x05	; 5
     342:	84 e0       	ldi	r24, 0x04	; 4
     344:	c7 df       	rcall	.-114    	; 0x2d4 <LCD_Custom_Character>
     346:	6e e2       	ldi	r22, 0x2E	; 46
     348:	75 e0       	ldi	r23, 0x05	; 5
     34a:	85 e0       	ldi	r24, 0x05	; 5
     34c:	c3 df       	rcall	.-122    	; 0x2d4 <LCD_Custom_Character>
     34e:	66 e2       	ldi	r22, 0x26	; 38
     350:	75 e0       	ldi	r23, 0x05	; 5
     352:	86 e0       	ldi	r24, 0x06	; 6
     354:	bf cf       	rjmp	.-130    	; 0x2d4 <LCD_Custom_Character>
     356:	08 95       	ret

00000358 <LCD_Game_Menu>:
     358:	8c e0       	ldi	r24, 0x0C	; 12
     35a:	6d df       	rcall	.-294    	; 0x236 <LCD_WriteCommand>
     35c:	81 e0       	ldi	r24, 0x01	; 1
     35e:	77 df       	rcall	.-274    	; 0x24e <LCD_Cursor>
     360:	85 e0       	ldi	r24, 0x05	; 5
     362:	7d df       	rcall	.-262    	; 0x25e <LCD_WriteData>
     364:	86 e0       	ldi	r24, 0x06	; 6
     366:	73 df       	rcall	.-282    	; 0x24e <LCD_Cursor>
     368:	81 e0       	ldi	r24, 0x01	; 1
     36a:	79 df       	rcall	.-270    	; 0x25e <LCD_WriteData>
     36c:	82 e0       	ldi	r24, 0x02	; 2
     36e:	77 df       	rcall	.-274    	; 0x25e <LCD_WriteData>
     370:	84 e0       	ldi	r24, 0x04	; 4
     372:	75 df       	rcall	.-278    	; 0x25e <LCD_WriteData>
     374:	80 e0       	ldi	r24, 0x00	; 0
     376:	73 df       	rcall	.-282    	; 0x25e <LCD_WriteData>
     378:	80 e1       	ldi	r24, 0x10	; 16
     37a:	69 df       	rcall	.-302    	; 0x24e <LCD_Cursor>
     37c:	85 e0       	ldi	r24, 0x05	; 5
     37e:	6f df       	rcall	.-290    	; 0x25e <LCD_WriteData>
     380:	46 e5       	ldi	r20, 0x56	; 86
     382:	55 e0       	ldi	r21, 0x05	; 5
     384:	62 e0       	ldi	r22, 0x02	; 2
     386:	70 e0       	ldi	r23, 0x00	; 0
     388:	81 e0       	ldi	r24, 0x01	; 1
     38a:	8b df       	rcall	.-234    	; 0x2a2 <LCD_Write_Single_Line>
     38c:	87 e1       	ldi	r24, 0x17	; 23
     38e:	5f df       	rcall	.-322    	; 0x24e <LCD_Cursor>
     390:	86 e0       	ldi	r24, 0x06	; 6
     392:	65 cf       	rjmp	.-310    	; 0x25e <LCD_WriteData>
     394:	08 95       	ret

00000396 <LCD_Menu_Tick>:
     396:	cf 93       	push	r28
     398:	df 93       	push	r29
     39a:	8b 30       	cpi	r24, 0x0B	; 11
     39c:	91 05       	cpc	r25, r1
     39e:	08 f0       	brcs	.+2      	; 0x3a2 <LCD_Menu_Tick+0xc>
     3a0:	04 c1       	rjmp	.+520    	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
     3a2:	fc 01       	movw	r30, r24
     3a4:	ea 5b       	subi	r30, 0xBA	; 186
     3a6:	ff 4f       	sbci	r31, 0xFF	; 255
     3a8:	0c 94 a4 0a 	jmp	0x1548	; 0x1548 <__tablejump2__>
     3ac:	80 91 cb 05 	lds	r24, 0x05CB	; 0x8005cb <LEFT>
     3b0:	88 23       	and	r24, r24
     3b2:	09 f4       	brne	.+2      	; 0x3b6 <LCD_Menu_Tick+0x20>
     3b4:	14 c1       	rjmp	.+552    	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
     3b6:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <RIGHT>
     3ba:	88 23       	and	r24, r24
     3bc:	09 f4       	brne	.+2      	; 0x3c0 <LCD_Menu_Tick+0x2a>
     3be:	0f c1       	rjmp	.+542    	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
     3c0:	80 91 c8 05 	lds	r24, 0x05C8	; 0x8005c8 <DOWN>
     3c4:	88 23       	and	r24, r24
     3c6:	09 f4       	brne	.+2      	; 0x3ca <LCD_Menu_Tick+0x34>
     3c8:	0a c1       	rjmp	.+532    	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
     3ca:	80 91 c9 05 	lds	r24, 0x05C9	; 0x8005c9 <UP>
     3ce:	88 23       	and	r24, r24
     3d0:	09 f4       	brne	.+2      	; 0x3d4 <LCD_Menu_Tick+0x3e>
     3d2:	05 c1       	rjmp	.+522    	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
     3d4:	10 92 c6 05 	sts	0x05C6, r1	; 0x8005c6 <current_song_choice>
     3d8:	82 e0       	ldi	r24, 0x02	; 2
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	f5 c2       	rjmp	.+1514   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     3de:	20 91 cb 05 	lds	r18, 0x05CB	; 0x8005cb <LEFT>
     3e2:	21 11       	cpse	r18, r1
     3e4:	f1 c2       	rjmp	.+1506   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     3e6:	20 91 ca 05 	lds	r18, 0x05CA	; 0x8005ca <RIGHT>
     3ea:	21 11       	cpse	r18, r1
     3ec:	ed c2       	rjmp	.+1498   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     3ee:	20 91 c9 05 	lds	r18, 0x05C9	; 0x8005c9 <UP>
     3f2:	21 11       	cpse	r18, r1
     3f4:	e9 c2       	rjmp	.+1490   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     3f6:	20 91 c8 05 	lds	r18, 0x05C8	; 0x8005c8 <DOWN>
     3fa:	21 11       	cpse	r18, r1
     3fc:	e5 c2       	rjmp	.+1482   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     3fe:	24 df       	rcall	.-440    	; 0x248 <LCD_ClearScreen>
     400:	f2 c0       	rjmp	.+484    	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
     402:	20 91 cb 05 	lds	r18, 0x05CB	; 0x8005cb <LEFT>
     406:	22 23       	and	r18, r18
     408:	71 f0       	breq	.+28     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
     40a:	30 91 ca 05 	lds	r19, 0x05CA	; 0x8005ca <RIGHT>
     40e:	31 11       	cpse	r19, r1
     410:	0a c0       	rjmp	.+20     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
     412:	30 91 c9 05 	lds	r19, 0x05C9	; 0x8005c9 <UP>
     416:	31 11       	cpse	r19, r1
     418:	06 c0       	rjmp	.+12     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
     41a:	20 91 c8 05 	lds	r18, 0x05C8	; 0x8005c8 <DOWN>
     41e:	21 11       	cpse	r18, r1
     420:	c4 c0       	rjmp	.+392    	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
     422:	12 df       	rcall	.-476    	; 0x248 <LCD_ClearScreen>
     424:	dc c0       	rjmp	.+440    	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
     426:	80 91 c8 05 	lds	r24, 0x05C8	; 0x8005c8 <DOWN>
     42a:	88 23       	and	r24, r24
     42c:	b1 f0       	breq	.+44     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
     42e:	80 91 c9 05 	lds	r24, 0x05C9	; 0x8005c9 <UP>
     432:	81 11       	cpse	r24, r1
     434:	d8 c0       	rjmp	.+432    	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
     436:	21 11       	cpse	r18, r1
     438:	d6 c0       	rjmp	.+428    	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
     43a:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <RIGHT>
     43e:	81 11       	cpse	r24, r1
     440:	d2 c0       	rjmp	.+420    	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
     442:	80 91 c6 05 	lds	r24, 0x05C6	; 0x8005c6 <current_song_choice>
     446:	88 23       	and	r24, r24
     448:	21 f0       	breq	.+8      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
     44a:	81 e0       	ldi	r24, 0x01	; 1
     44c:	80 93 c6 05 	sts	0x05C6, r24	; 0x8005c6 <current_song_choice>
     450:	ce c0       	rjmp	.+412    	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
     452:	81 e0       	ldi	r24, 0x01	; 1
     454:	80 93 c6 05 	sts	0x05C6, r24	; 0x8005c6 <current_song_choice>
     458:	ca c0       	rjmp	.+404    	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
     45a:	80 91 c9 05 	lds	r24, 0x05C9	; 0x8005c9 <UP>
     45e:	88 23       	and	r24, r24
     460:	09 f4       	brne	.+2      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     462:	af c2       	rjmp	.+1374   	; 0x9c2 <__LOCK_REGION_LENGTH__+0x5c2>
     464:	21 11       	cpse	r18, r1
     466:	bf c0       	rjmp	.+382    	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
     468:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <RIGHT>
     46c:	81 11       	cpse	r24, r1
     46e:	bb c0       	rjmp	.+374    	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
     470:	80 91 c6 05 	lds	r24, 0x05C6	; 0x8005c6 <current_song_choice>
     474:	88 23       	and	r24, r24
     476:	09 f4       	brne	.+2      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
     478:	c1 c0       	rjmp	.+386    	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
     47a:	81 50       	subi	r24, 0x01	; 1
     47c:	80 93 c6 05 	sts	0x05C6, r24	; 0x8005c6 <current_song_choice>
     480:	b2 c0       	rjmp	.+356    	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
     482:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <RIGHT>
     486:	88 23       	and	r24, r24
     488:	09 f4       	brne	.+2      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
     48a:	ad c0       	rjmp	.+346    	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
     48c:	80 91 c6 05 	lds	r24, 0x05C6	; 0x8005c6 <current_song_choice>
     490:	88 23       	and	r24, r24
     492:	09 f4       	brne	.+2      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
     494:	93 c2       	rjmp	.+1318   	; 0x9bc <__LOCK_REGION_LENGTH__+0x5bc>
     496:	d8 de       	rcall	.-592    	; 0x248 <LCD_ClearScreen>
     498:	a2 c0       	rjmp	.+324    	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
     49a:	20 91 cb 05 	lds	r18, 0x05CB	; 0x8005cb <LEFT>
     49e:	21 11       	cpse	r18, r1
     4a0:	93 c2       	rjmp	.+1318   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     4a2:	20 91 ca 05 	lds	r18, 0x05CA	; 0x8005ca <RIGHT>
     4a6:	21 11       	cpse	r18, r1
     4a8:	8f c2       	rjmp	.+1310   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     4aa:	20 91 c9 05 	lds	r18, 0x05C9	; 0x8005c9 <UP>
     4ae:	21 11       	cpse	r18, r1
     4b0:	8b c2       	rjmp	.+1302   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     4b2:	20 91 c8 05 	lds	r18, 0x05C8	; 0x8005c8 <DOWN>
     4b6:	21 11       	cpse	r18, r1
     4b8:	87 c2       	rjmp	.+1294   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     4ba:	c6 de       	rcall	.-628    	; 0x248 <LCD_ClearScreen>
     4bc:	b6 c0       	rjmp	.+364    	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
     4be:	80 91 cb 05 	lds	r24, 0x05CB	; 0x8005cb <LEFT>
     4c2:	88 23       	and	r24, r24
     4c4:	71 f0       	breq	.+28     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     4c6:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <RIGHT>
     4ca:	81 11       	cpse	r24, r1
     4cc:	ae c0       	rjmp	.+348    	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
     4ce:	80 91 c9 05 	lds	r24, 0x05C9	; 0x8005c9 <UP>
     4d2:	81 11       	cpse	r24, r1
     4d4:	aa c0       	rjmp	.+340    	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
     4d6:	80 91 c8 05 	lds	r24, 0x05C8	; 0x8005c8 <DOWN>
     4da:	81 11       	cpse	r24, r1
     4dc:	a6 c0       	rjmp	.+332    	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
     4de:	b4 de       	rcall	.-664    	; 0x248 <LCD_ClearScreen>
     4e0:	82 c0       	rjmp	.+260    	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
     4e2:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <RIGHT>
     4e6:	88 23       	and	r24, r24
     4e8:	09 f4       	brne	.+2      	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
     4ea:	9f c0       	rjmp	.+318    	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
     4ec:	80 91 c9 05 	lds	r24, 0x05C9	; 0x8005c9 <UP>
     4f0:	81 11       	cpse	r24, r1
     4f2:	9b c0       	rjmp	.+310    	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
     4f4:	80 91 c8 05 	lds	r24, 0x05C8	; 0x8005c8 <DOWN>
     4f8:	81 11       	cpse	r24, r1
     4fa:	97 c0       	rjmp	.+302    	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
     4fc:	a5 de       	rcall	.-694    	; 0x248 <LCD_ClearScreen>
     4fe:	86 e0       	ldi	r24, 0x06	; 6
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	62 c2       	rjmp	.+1220   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     504:	20 91 cb 05 	lds	r18, 0x05CB	; 0x8005cb <LEFT>
     508:	21 11       	cpse	r18, r1
     50a:	5e c2       	rjmp	.+1212   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     50c:	20 91 ca 05 	lds	r18, 0x05CA	; 0x8005ca <RIGHT>
     510:	21 11       	cpse	r18, r1
     512:	5a c2       	rjmp	.+1204   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     514:	20 91 c9 05 	lds	r18, 0x05C9	; 0x8005c9 <UP>
     518:	21 11       	cpse	r18, r1
     51a:	56 c2       	rjmp	.+1196   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     51c:	20 91 c8 05 	lds	r18, 0x05C8	; 0x8005c8 <DOWN>
     520:	21 11       	cpse	r18, r1
     522:	52 c2       	rjmp	.+1188   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     524:	1f c1       	rjmp	.+574    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
     526:	80 91 b3 05 	lds	r24, 0x05B3	; 0x8005b3 <count_down.2259>
     52a:	89 31       	cpi	r24, 0x19	; 25
     52c:	20 f4       	brcc	.+8      	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
     52e:	8f 5f       	subi	r24, 0xFF	; 255
     530:	80 93 b3 05 	sts	0x05B3, r24	; 0x8005b3 <count_down.2259>
     534:	17 c1       	rjmp	.+558    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
     536:	10 92 b3 05 	sts	0x05B3, r1	; 0x8005b3 <count_down.2259>
     53a:	81 e0       	ldi	r24, 0x01	; 1
     53c:	80 93 b8 05 	sts	0x05B8, r24	; 0x8005b8 <playing>
     540:	25 c1       	rjmp	.+586    	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
     542:	80 91 ba 05 	lds	r24, 0x05BA	; 0x8005ba <song_finished>
     546:	88 23       	and	r24, r24
     548:	09 f4       	brne	.+2      	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
     54a:	20 c1       	rjmp	.+576    	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
     54c:	80 91 b8 05 	lds	r24, 0x05B8	; 0x8005b8 <playing>
     550:	81 11       	cpse	r24, r1
     552:	1c c1       	rjmp	.+568    	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
     554:	94 c1       	rjmp	.+808    	; 0x87e <__LOCK_REGION_LENGTH__+0x47e>
     556:	80 91 cb 05 	lds	r24, 0x05CB	; 0x8005cb <LEFT>
     55a:	81 11       	cpse	r24, r1
     55c:	0d c0       	rjmp	.+26     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
     55e:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <RIGHT>
     562:	81 11       	cpse	r24, r1
     564:	09 c0       	rjmp	.+18     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
     566:	80 91 c9 05 	lds	r24, 0x05C9	; 0x8005c9 <UP>
     56a:	81 11       	cpse	r24, r1
     56c:	05 c0       	rjmp	.+10     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
     56e:	80 91 c8 05 	lds	r24, 0x05C8	; 0x8005c8 <DOWN>
     572:	88 23       	and	r24, r24
     574:	09 f4       	brne	.+2      	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
     576:	83 c1       	rjmp	.+774    	; 0x87e <__LOCK_REGION_LENGTH__+0x47e>
     578:	10 92 ba 05 	sts	0x05BA, r1	; 0x8005ba <song_finished>
     57c:	10 92 b9 05 	sts	0x05B9, r1	; 0x8005b9 <score_increase>
     580:	8a e0       	ldi	r24, 0x0A	; 10
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	21 c2       	rjmp	.+1090   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     586:	20 91 cb 05 	lds	r18, 0x05CB	; 0x8005cb <LEFT>
     58a:	21 11       	cpse	r18, r1
     58c:	1d c2       	rjmp	.+1082   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     58e:	20 91 ca 05 	lds	r18, 0x05CA	; 0x8005ca <RIGHT>
     592:	21 11       	cpse	r18, r1
     594:	19 c2       	rjmp	.+1074   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     596:	20 91 c9 05 	lds	r18, 0x05C9	; 0x8005c9 <UP>
     59a:	21 11       	cpse	r18, r1
     59c:	15 c2       	rjmp	.+1066   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     59e:	20 91 c8 05 	lds	r18, 0x05C8	; 0x8005c8 <DOWN>
     5a2:	21 11       	cpse	r18, r1
     5a4:	11 c2       	rjmp	.+1058   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     5a6:	50 de       	rcall	.-864    	; 0x248 <LCD_ClearScreen>
     5a8:	1a c0       	rjmp	.+52     	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
     5aa:	85 30       	cpi	r24, 0x05	; 5
     5ac:	91 05       	cpc	r25, r1
     5ae:	09 f4       	brne	.+2      	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
     5b0:	3c c0       	rjmp	.+120    	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
     5b2:	44 f4       	brge	.+16     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
     5b4:	81 30       	cpi	r24, 0x01	; 1
     5b6:	91 05       	cpc	r25, r1
     5b8:	91 f0       	breq	.+36     	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
     5ba:	83 30       	cpi	r24, 0x03	; 3
     5bc:	91 05       	cpc	r25, r1
     5be:	09 f0       	breq	.+2      	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
     5c0:	03 c2       	rjmp	.+1030   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     5c2:	11 c0       	rjmp	.+34     	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
     5c4:	88 30       	cpi	r24, 0x08	; 8
     5c6:	91 05       	cpc	r25, r1
     5c8:	09 f4       	brne	.+2      	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     5ca:	e0 c0       	rjmp	.+448    	; 0x78c <__LOCK_REGION_LENGTH__+0x38c>
     5cc:	89 30       	cpi	r24, 0x09	; 9
     5ce:	91 05       	cpc	r25, r1
     5d0:	09 f4       	brne	.+2      	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
     5d2:	55 c1       	rjmp	.+682    	; 0x87e <__LOCK_REGION_LENGTH__+0x47e>
     5d4:	87 30       	cpi	r24, 0x07	; 7
     5d6:	91 05       	cpc	r25, r1
     5d8:	09 f0       	breq	.+2      	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
     5da:	f6 c1       	rjmp	.+1004   	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     5dc:	c3 c0       	rjmp	.+390    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
     5de:	bc de       	rcall	.-648    	; 0x358 <LCD_Game_Menu>
     5e0:	81 e0       	ldi	r24, 0x01	; 1
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	f1 c1       	rjmp	.+994    	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     5e6:	80 91 c6 05 	lds	r24, 0x05C6	; 0x8005c6 <current_song_choice>
     5ea:	88 23       	and	r24, r24
     5ec:	39 f0       	breq	.+14     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
     5ee:	81 e0       	ldi	r24, 0x01	; 1
     5f0:	2e de       	rcall	.-932    	; 0x24e <LCD_Cursor>
     5f2:	80 e2       	ldi	r24, 0x20	; 32
     5f4:	34 de       	rcall	.-920    	; 0x25e <LCD_WriteData>
     5f6:	81 e1       	ldi	r24, 0x11	; 17
     5f8:	2a de       	rcall	.-940    	; 0x24e <LCD_Cursor>
     5fa:	06 c0       	rjmp	.+12     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
     5fc:	81 e1       	ldi	r24, 0x11	; 17
     5fe:	27 de       	rcall	.-946    	; 0x24e <LCD_Cursor>
     600:	80 e2       	ldi	r24, 0x20	; 32
     602:	2d de       	rcall	.-934    	; 0x25e <LCD_WriteData>
     604:	81 e0       	ldi	r24, 0x01	; 1
     606:	23 de       	rcall	.-954    	; 0x24e <LCD_Cursor>
     608:	85 ea       	ldi	r24, 0xA5	; 165
     60a:	29 de       	rcall	.-942    	; 0x25e <LCD_WriteData>
     60c:	47 e6       	ldi	r20, 0x67	; 103
     60e:	55 e0       	ldi	r21, 0x05	; 5
     610:	61 e0       	ldi	r22, 0x01	; 1
     612:	70 e0       	ldi	r23, 0x00	; 0
     614:	82 e0       	ldi	r24, 0x02	; 2
     616:	45 de       	rcall	.-886    	; 0x2a2 <LCD_Write_Single_Line>
     618:	45 e7       	ldi	r20, 0x75	; 117
     61a:	55 e0       	ldi	r21, 0x05	; 5
     61c:	62 e0       	ldi	r22, 0x02	; 2
     61e:	70 e0       	ldi	r23, 0x00	; 0
     620:	82 e0       	ldi	r24, 0x02	; 2
     622:	3f de       	rcall	.-898    	; 0x2a2 <LCD_Write_Single_Line>
     624:	83 e0       	ldi	r24, 0x03	; 3
     626:	90 e0       	ldi	r25, 0x00	; 0
     628:	cf c1       	rjmp	.+926    	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     62a:	48 e7       	ldi	r20, 0x78	; 120
     62c:	55 e0       	ldi	r21, 0x05	; 5
     62e:	61 e0       	ldi	r22, 0x01	; 1
     630:	70 e0       	ldi	r23, 0x00	; 0
     632:	81 e0       	ldi	r24, 0x01	; 1
     634:	36 de       	rcall	.-916    	; 0x2a2 <LCD_Write_Single_Line>
     636:	87 e0       	ldi	r24, 0x07	; 7
     638:	0a de       	rcall	.-1004   	; 0x24e <LCD_Cursor>
     63a:	80 e0       	ldi	r24, 0x00	; 0
     63c:	10 de       	rcall	.-992    	; 0x25e <LCD_WriteData>
     63e:	48 e8       	ldi	r20, 0x88	; 136
     640:	55 e0       	ldi	r21, 0x05	; 5
     642:	62 e0       	ldi	r22, 0x02	; 2
     644:	70 e0       	ldi	r23, 0x00	; 0
     646:	81 e0       	ldi	r24, 0x01	; 1
     648:	2c de       	rcall	.-936    	; 0x2a2 <LCD_Write_Single_Line>
     64a:	8c e1       	ldi	r24, 0x1C	; 28
     64c:	00 de       	rcall	.-1024   	; 0x24e <LCD_Cursor>
     64e:	80 91 c6 05 	lds	r24, 0x05C6	; 0x8005c6 <current_song_choice>
     652:	cc e1       	ldi	r28, 0x1C	; 28
     654:	d4 e0       	ldi	r29, 0x04	; 4
     656:	8c 9f       	mul	r24, r28
     658:	f0 01       	movw	r30, r0
     65a:	8d 9f       	mul	r24, r29
     65c:	f0 0d       	add	r31, r0
     65e:	11 24       	eor	r1, r1
     660:	e5 5b       	subi	r30, 0xB5	; 181
     662:	f5 4f       	sbci	r31, 0xF5	; 245
     664:	20 81       	ld	r18, Z
     666:	31 81       	ldd	r19, Z+1	; 0x01
     668:	36 95       	lsr	r19
     66a:	27 95       	ror	r18
     66c:	36 95       	lsr	r19
     66e:	27 95       	ror	r18
     670:	ab e7       	ldi	r26, 0x7B	; 123
     672:	b4 e1       	ldi	r27, 0x14	; 20
     674:	72 d7       	rcall	.+3812   	; 0x155a <__umulhisi3>
     676:	ac 01       	movw	r20, r24
     678:	56 95       	lsr	r21
     67a:	47 95       	ror	r20
     67c:	9a 01       	movw	r18, r20
     67e:	ad ec       	ldi	r26, 0xCD	; 205
     680:	bc ec       	ldi	r27, 0xCC	; 204
     682:	6b d7       	rcall	.+3798   	; 0x155a <__umulhisi3>
     684:	96 95       	lsr	r25
     686:	87 95       	ror	r24
     688:	96 95       	lsr	r25
     68a:	87 95       	ror	r24
     68c:	96 95       	lsr	r25
     68e:	87 95       	ror	r24
     690:	9c 01       	movw	r18, r24
     692:	22 0f       	add	r18, r18
     694:	33 1f       	adc	r19, r19
     696:	88 0f       	add	r24, r24
     698:	99 1f       	adc	r25, r25
     69a:	88 0f       	add	r24, r24
     69c:	99 1f       	adc	r25, r25
     69e:	88 0f       	add	r24, r24
     6a0:	99 1f       	adc	r25, r25
     6a2:	82 0f       	add	r24, r18
     6a4:	93 1f       	adc	r25, r19
     6a6:	9a 01       	movw	r18, r20
     6a8:	28 1b       	sub	r18, r24
     6aa:	39 0b       	sbc	r19, r25
     6ac:	c9 01       	movw	r24, r18
     6ae:	80 5d       	subi	r24, 0xD0	; 208
     6b0:	d6 dd       	rcall	.-1108   	; 0x25e <LCD_WriteData>
     6b2:	80 91 c6 05 	lds	r24, 0x05C6	; 0x8005c6 <current_song_choice>
     6b6:	8c 9f       	mul	r24, r28
     6b8:	f0 01       	movw	r30, r0
     6ba:	8d 9f       	mul	r24, r29
     6bc:	f0 0d       	add	r31, r0
     6be:	11 24       	eor	r1, r1
     6c0:	e5 5b       	subi	r30, 0xB5	; 181
     6c2:	f5 4f       	sbci	r31, 0xF5	; 245
     6c4:	20 81       	ld	r18, Z
     6c6:	31 81       	ldd	r19, Z+1	; 0x01
     6c8:	ad ec       	ldi	r26, 0xCD	; 205
     6ca:	bc ec       	ldi	r27, 0xCC	; 204
     6cc:	46 d7       	rcall	.+3724   	; 0x155a <__umulhisi3>
     6ce:	ac 01       	movw	r20, r24
     6d0:	56 95       	lsr	r21
     6d2:	47 95       	ror	r20
     6d4:	56 95       	lsr	r21
     6d6:	47 95       	ror	r20
     6d8:	56 95       	lsr	r21
     6da:	47 95       	ror	r20
     6dc:	9a 01       	movw	r18, r20
     6de:	3d d7       	rcall	.+3706   	; 0x155a <__umulhisi3>
     6e0:	96 95       	lsr	r25
     6e2:	87 95       	ror	r24
     6e4:	96 95       	lsr	r25
     6e6:	87 95       	ror	r24
     6e8:	96 95       	lsr	r25
     6ea:	87 95       	ror	r24
     6ec:	9c 01       	movw	r18, r24
     6ee:	22 0f       	add	r18, r18
     6f0:	33 1f       	adc	r19, r19
     6f2:	88 0f       	add	r24, r24
     6f4:	99 1f       	adc	r25, r25
     6f6:	88 0f       	add	r24, r24
     6f8:	99 1f       	adc	r25, r25
     6fa:	88 0f       	add	r24, r24
     6fc:	99 1f       	adc	r25, r25
     6fe:	82 0f       	add	r24, r18
     700:	93 1f       	adc	r25, r19
     702:	9a 01       	movw	r18, r20
     704:	28 1b       	sub	r18, r24
     706:	39 0b       	sbc	r19, r25
     708:	c9 01       	movw	r24, r18
     70a:	80 5d       	subi	r24, 0xD0	; 208
     70c:	a8 dd       	rcall	.-1200   	; 0x25e <LCD_WriteData>
     70e:	80 91 c6 05 	lds	r24, 0x05C6	; 0x8005c6 <current_song_choice>
     712:	8c 9f       	mul	r24, r28
     714:	f0 01       	movw	r30, r0
     716:	8d 9f       	mul	r24, r29
     718:	f0 0d       	add	r31, r0
     71a:	11 24       	eor	r1, r1
     71c:	e5 5b       	subi	r30, 0xB5	; 181
     71e:	f5 4f       	sbci	r31, 0xF5	; 245
     720:	40 81       	ld	r20, Z
     722:	51 81       	ldd	r21, Z+1	; 0x01
     724:	9a 01       	movw	r18, r20
     726:	ad ec       	ldi	r26, 0xCD	; 205
     728:	bc ec       	ldi	r27, 0xCC	; 204
     72a:	17 d7       	rcall	.+3630   	; 0x155a <__umulhisi3>
     72c:	96 95       	lsr	r25
     72e:	87 95       	ror	r24
     730:	96 95       	lsr	r25
     732:	87 95       	ror	r24
     734:	96 95       	lsr	r25
     736:	87 95       	ror	r24
     738:	9c 01       	movw	r18, r24
     73a:	22 0f       	add	r18, r18
     73c:	33 1f       	adc	r19, r19
     73e:	88 0f       	add	r24, r24
     740:	99 1f       	adc	r25, r25
     742:	88 0f       	add	r24, r24
     744:	99 1f       	adc	r25, r25
     746:	88 0f       	add	r24, r24
     748:	99 1f       	adc	r25, r25
     74a:	82 0f       	add	r24, r18
     74c:	93 1f       	adc	r25, r19
     74e:	9a 01       	movw	r18, r20
     750:	28 1b       	sub	r18, r24
     752:	39 0b       	sbc	r19, r25
     754:	c9 01       	movw	r24, r18
     756:	80 5d       	subi	r24, 0xD0	; 208
     758:	82 dd       	rcall	.-1276   	; 0x25e <LCD_WriteData>
     75a:	81 e2       	ldi	r24, 0x21	; 33
     75c:	78 dd       	rcall	.-1296   	; 0x24e <LCD_Cursor>
     75e:	85 e0       	ldi	r24, 0x05	; 5
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	32 c1       	rjmp	.+612    	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     764:	6d e8       	ldi	r22, 0x8D	; 141
     766:	75 e0       	ldi	r23, 0x05	; 5
     768:	81 e0       	ldi	r24, 0x01	; 1
     76a:	82 dd       	rcall	.-1276   	; 0x270 <LCD_DisplayString>
     76c:	89 e0       	ldi	r24, 0x09	; 9
     76e:	6f dd       	rcall	.-1314   	; 0x24e <LCD_Cursor>
     770:	c3 ec       	ldi	r28, 0xC3	; 195
     772:	d5 e0       	ldi	r29, 0x05	; 5
     774:	88 81       	ld	r24, Y
     776:	80 5d       	subi	r24, 0xD0	; 208
     778:	72 dd       	rcall	.-1308   	; 0x25e <LCD_WriteData>
     77a:	88 81       	ld	r24, Y
     77c:	80 5d       	subi	r24, 0xD0	; 208
     77e:	6f dd       	rcall	.-1314   	; 0x25e <LCD_WriteData>
     780:	88 81       	ld	r24, Y
     782:	80 5d       	subi	r24, 0xD0	; 208
     784:	6c dd       	rcall	.-1320   	; 0x25e <LCD_WriteData>
     786:	87 e0       	ldi	r24, 0x07	; 7
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	1e c1       	rjmp	.+572    	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     78c:	80 91 b9 05 	lds	r24, 0x05B9	; 0x8005b9 <score_increase>
     790:	88 23       	and	r24, r24
     792:	09 f4       	brne	.+2      	; 0x796 <__LOCK_REGION_LENGTH__+0x396>
     794:	10 c1       	rjmp	.+544    	; 0x9b6 <__LOCK_REGION_LENGTH__+0x5b6>
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	5a dd       	rcall	.-1356   	; 0x24e <LCD_Cursor>
     79a:	40 91 c3 05 	lds	r20, 0x05C3	; 0x8005c3 <current_score>
     79e:	50 91 c4 05 	lds	r21, 0x05C4	; 0x8005c4 <current_score+0x1>
     7a2:	9a 01       	movw	r18, r20
     7a4:	ad ec       	ldi	r26, 0xCD	; 205
     7a6:	bc ec       	ldi	r27, 0xCC	; 204
     7a8:	d8 d6       	rcall	.+3504   	; 0x155a <__umulhisi3>
     7aa:	96 95       	lsr	r25
     7ac:	87 95       	ror	r24
     7ae:	96 95       	lsr	r25
     7b0:	87 95       	ror	r24
     7b2:	96 95       	lsr	r25
     7b4:	87 95       	ror	r24
     7b6:	9c 01       	movw	r18, r24
     7b8:	22 0f       	add	r18, r18
     7ba:	33 1f       	adc	r19, r19
     7bc:	88 0f       	add	r24, r24
     7be:	99 1f       	adc	r25, r25
     7c0:	88 0f       	add	r24, r24
     7c2:	99 1f       	adc	r25, r25
     7c4:	88 0f       	add	r24, r24
     7c6:	99 1f       	adc	r25, r25
     7c8:	82 0f       	add	r24, r18
     7ca:	93 1f       	adc	r25, r19
     7cc:	9a 01       	movw	r18, r20
     7ce:	28 1b       	sub	r18, r24
     7d0:	39 0b       	sbc	r19, r25
     7d2:	c9 01       	movw	r24, r18
     7d4:	80 5d       	subi	r24, 0xD0	; 208
     7d6:	43 dd       	rcall	.-1402   	; 0x25e <LCD_WriteData>
     7d8:	20 91 c3 05 	lds	r18, 0x05C3	; 0x8005c3 <current_score>
     7dc:	30 91 c4 05 	lds	r19, 0x05C4	; 0x8005c4 <current_score+0x1>
     7e0:	ad ec       	ldi	r26, 0xCD	; 205
     7e2:	bc ec       	ldi	r27, 0xCC	; 204
     7e4:	ba d6       	rcall	.+3444   	; 0x155a <__umulhisi3>
     7e6:	ac 01       	movw	r20, r24
     7e8:	56 95       	lsr	r21
     7ea:	47 95       	ror	r20
     7ec:	56 95       	lsr	r21
     7ee:	47 95       	ror	r20
     7f0:	56 95       	lsr	r21
     7f2:	47 95       	ror	r20
     7f4:	9a 01       	movw	r18, r20
     7f6:	b1 d6       	rcall	.+3426   	; 0x155a <__umulhisi3>
     7f8:	96 95       	lsr	r25
     7fa:	87 95       	ror	r24
     7fc:	96 95       	lsr	r25
     7fe:	87 95       	ror	r24
     800:	96 95       	lsr	r25
     802:	87 95       	ror	r24
     804:	9c 01       	movw	r18, r24
     806:	22 0f       	add	r18, r18
     808:	33 1f       	adc	r19, r19
     80a:	88 0f       	add	r24, r24
     80c:	99 1f       	adc	r25, r25
     80e:	88 0f       	add	r24, r24
     810:	99 1f       	adc	r25, r25
     812:	88 0f       	add	r24, r24
     814:	99 1f       	adc	r25, r25
     816:	82 0f       	add	r24, r18
     818:	93 1f       	adc	r25, r19
     81a:	9a 01       	movw	r18, r20
     81c:	28 1b       	sub	r18, r24
     81e:	39 0b       	sbc	r19, r25
     820:	c9 01       	movw	r24, r18
     822:	80 5d       	subi	r24, 0xD0	; 208
     824:	1c dd       	rcall	.-1480   	; 0x25e <LCD_WriteData>
     826:	20 91 c3 05 	lds	r18, 0x05C3	; 0x8005c3 <current_score>
     82a:	30 91 c4 05 	lds	r19, 0x05C4	; 0x8005c4 <current_score+0x1>
     82e:	36 95       	lsr	r19
     830:	27 95       	ror	r18
     832:	36 95       	lsr	r19
     834:	27 95       	ror	r18
     836:	ab e7       	ldi	r26, 0x7B	; 123
     838:	b4 e1       	ldi	r27, 0x14	; 20
     83a:	8f d6       	rcall	.+3358   	; 0x155a <__umulhisi3>
     83c:	ac 01       	movw	r20, r24
     83e:	56 95       	lsr	r21
     840:	47 95       	ror	r20
     842:	9a 01       	movw	r18, r20
     844:	ad ec       	ldi	r26, 0xCD	; 205
     846:	bc ec       	ldi	r27, 0xCC	; 204
     848:	88 d6       	rcall	.+3344   	; 0x155a <__umulhisi3>
     84a:	96 95       	lsr	r25
     84c:	87 95       	ror	r24
     84e:	96 95       	lsr	r25
     850:	87 95       	ror	r24
     852:	96 95       	lsr	r25
     854:	87 95       	ror	r24
     856:	9c 01       	movw	r18, r24
     858:	22 0f       	add	r18, r18
     85a:	33 1f       	adc	r19, r19
     85c:	88 0f       	add	r24, r24
     85e:	99 1f       	adc	r25, r25
     860:	88 0f       	add	r24, r24
     862:	99 1f       	adc	r25, r25
     864:	88 0f       	add	r24, r24
     866:	99 1f       	adc	r25, r25
     868:	82 0f       	add	r24, r18
     86a:	93 1f       	adc	r25, r19
     86c:	9a 01       	movw	r18, r20
     86e:	28 1b       	sub	r18, r24
     870:	39 0b       	sbc	r19, r25
     872:	c9 01       	movw	r24, r18
     874:	80 5d       	subi	r24, 0xD0	; 208
     876:	f3 dc       	rcall	.-1562   	; 0x25e <LCD_WriteData>
     878:	88 e0       	ldi	r24, 0x08	; 8
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	a5 c0       	rjmp	.+330    	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     87e:	20 91 c6 05 	lds	r18, 0x05C6	; 0x8005c6 <current_song_choice>
     882:	8c e1       	ldi	r24, 0x1C	; 28
     884:	94 e0       	ldi	r25, 0x04	; 4
     886:	28 9f       	mul	r18, r24
     888:	f0 01       	movw	r30, r0
     88a:	29 9f       	mul	r18, r25
     88c:	f0 0d       	add	r31, r0
     88e:	11 24       	eor	r1, r1
     890:	e5 5b       	subi	r30, 0xB5	; 181
     892:	f5 4f       	sbci	r31, 0xF5	; 245
     894:	20 81       	ld	r18, Z
     896:	31 81       	ldd	r19, Z+1	; 0x01
     898:	80 91 c3 05 	lds	r24, 0x05C3	; 0x8005c3 <current_score>
     89c:	90 91 c4 05 	lds	r25, 0x05C4	; 0x8005c4 <current_score+0x1>
     8a0:	28 17       	cp	r18, r24
     8a2:	39 07       	cpc	r19, r25
     8a4:	08 f0       	brcs	.+2      	; 0x8a8 <__LOCK_REGION_LENGTH__+0x4a8>
     8a6:	7e c0       	rjmp	.+252    	; 0x9a4 <__LOCK_REGION_LENGTH__+0x5a4>
     8a8:	cf dc       	rcall	.-1634   	; 0x248 <LCD_ClearScreen>
     8aa:	64 e9       	ldi	r22, 0x94	; 148
     8ac:	75 e0       	ldi	r23, 0x05	; 5
     8ae:	81 e0       	ldi	r24, 0x01	; 1
     8b0:	df dc       	rcall	.-1602   	; 0x270 <LCD_DisplayString>
     8b2:	8c e0       	ldi	r24, 0x0C	; 12
     8b4:	cc dc       	rcall	.-1640   	; 0x24e <LCD_Cursor>
     8b6:	20 91 c3 05 	lds	r18, 0x05C3	; 0x8005c3 <current_score>
     8ba:	30 91 c4 05 	lds	r19, 0x05C4	; 0x8005c4 <current_score+0x1>
     8be:	36 95       	lsr	r19
     8c0:	27 95       	ror	r18
     8c2:	36 95       	lsr	r19
     8c4:	27 95       	ror	r18
     8c6:	ab e7       	ldi	r26, 0x7B	; 123
     8c8:	b4 e1       	ldi	r27, 0x14	; 20
     8ca:	47 d6       	rcall	.+3214   	; 0x155a <__umulhisi3>
     8cc:	ac 01       	movw	r20, r24
     8ce:	56 95       	lsr	r21
     8d0:	47 95       	ror	r20
     8d2:	9a 01       	movw	r18, r20
     8d4:	ad ec       	ldi	r26, 0xCD	; 205
     8d6:	bc ec       	ldi	r27, 0xCC	; 204
     8d8:	40 d6       	rcall	.+3200   	; 0x155a <__umulhisi3>
     8da:	96 95       	lsr	r25
     8dc:	87 95       	ror	r24
     8de:	96 95       	lsr	r25
     8e0:	87 95       	ror	r24
     8e2:	96 95       	lsr	r25
     8e4:	87 95       	ror	r24
     8e6:	9c 01       	movw	r18, r24
     8e8:	22 0f       	add	r18, r18
     8ea:	33 1f       	adc	r19, r19
     8ec:	88 0f       	add	r24, r24
     8ee:	99 1f       	adc	r25, r25
     8f0:	88 0f       	add	r24, r24
     8f2:	99 1f       	adc	r25, r25
     8f4:	88 0f       	add	r24, r24
     8f6:	99 1f       	adc	r25, r25
     8f8:	82 0f       	add	r24, r18
     8fa:	93 1f       	adc	r25, r19
     8fc:	9a 01       	movw	r18, r20
     8fe:	28 1b       	sub	r18, r24
     900:	39 0b       	sbc	r19, r25
     902:	c9 01       	movw	r24, r18
     904:	80 5d       	subi	r24, 0xD0	; 208
     906:	ab dc       	rcall	.-1706   	; 0x25e <LCD_WriteData>
     908:	20 91 c3 05 	lds	r18, 0x05C3	; 0x8005c3 <current_score>
     90c:	30 91 c4 05 	lds	r19, 0x05C4	; 0x8005c4 <current_score+0x1>
     910:	ad ec       	ldi	r26, 0xCD	; 205
     912:	bc ec       	ldi	r27, 0xCC	; 204
     914:	22 d6       	rcall	.+3140   	; 0x155a <__umulhisi3>
     916:	ac 01       	movw	r20, r24
     918:	56 95       	lsr	r21
     91a:	47 95       	ror	r20
     91c:	56 95       	lsr	r21
     91e:	47 95       	ror	r20
     920:	56 95       	lsr	r21
     922:	47 95       	ror	r20
     924:	9a 01       	movw	r18, r20
     926:	19 d6       	rcall	.+3122   	; 0x155a <__umulhisi3>
     928:	96 95       	lsr	r25
     92a:	87 95       	ror	r24
     92c:	96 95       	lsr	r25
     92e:	87 95       	ror	r24
     930:	96 95       	lsr	r25
     932:	87 95       	ror	r24
     934:	9c 01       	movw	r18, r24
     936:	22 0f       	add	r18, r18
     938:	33 1f       	adc	r19, r19
     93a:	88 0f       	add	r24, r24
     93c:	99 1f       	adc	r25, r25
     93e:	88 0f       	add	r24, r24
     940:	99 1f       	adc	r25, r25
     942:	88 0f       	add	r24, r24
     944:	99 1f       	adc	r25, r25
     946:	82 0f       	add	r24, r18
     948:	93 1f       	adc	r25, r19
     94a:	9a 01       	movw	r18, r20
     94c:	28 1b       	sub	r18, r24
     94e:	39 0b       	sbc	r19, r25
     950:	c9 01       	movw	r24, r18
     952:	80 5d       	subi	r24, 0xD0	; 208
     954:	84 dc       	rcall	.-1784   	; 0x25e <LCD_WriteData>
     956:	40 91 c3 05 	lds	r20, 0x05C3	; 0x8005c3 <current_score>
     95a:	50 91 c4 05 	lds	r21, 0x05C4	; 0x8005c4 <current_score+0x1>
     95e:	9a 01       	movw	r18, r20
     960:	ad ec       	ldi	r26, 0xCD	; 205
     962:	bc ec       	ldi	r27, 0xCC	; 204
     964:	fa d5       	rcall	.+3060   	; 0x155a <__umulhisi3>
     966:	96 95       	lsr	r25
     968:	87 95       	ror	r24
     96a:	96 95       	lsr	r25
     96c:	87 95       	ror	r24
     96e:	96 95       	lsr	r25
     970:	87 95       	ror	r24
     972:	9c 01       	movw	r18, r24
     974:	22 0f       	add	r18, r18
     976:	33 1f       	adc	r19, r19
     978:	88 0f       	add	r24, r24
     97a:	99 1f       	adc	r25, r25
     97c:	88 0f       	add	r24, r24
     97e:	99 1f       	adc	r25, r25
     980:	88 0f       	add	r24, r24
     982:	99 1f       	adc	r25, r25
     984:	82 0f       	add	r24, r18
     986:	93 1f       	adc	r25, r19
     988:	9a 01       	movw	r18, r20
     98a:	28 1b       	sub	r18, r24
     98c:	39 0b       	sbc	r19, r25
     98e:	c9 01       	movw	r24, r18
     990:	80 5d       	subi	r24, 0xD0	; 208
     992:	65 dc       	rcall	.-1846   	; 0x25e <LCD_WriteData>
     994:	60 91 c3 05 	lds	r22, 0x05C3	; 0x8005c3 <current_score>
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	f5 d5       	rcall	.+3050   	; 0x1588 <eeprom_update_byte>
     99e:	89 e0       	ldi	r24, 0x09	; 9
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	12 c0       	rjmp	.+36     	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     9a4:	40 ea       	ldi	r20, 0xA0	; 160
     9a6:	55 e0       	ldi	r21, 0x05	; 5
     9a8:	62 e0       	ldi	r22, 0x02	; 2
     9aa:	70 e0       	ldi	r23, 0x00	; 0
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	79 dc       	rcall	.-1806   	; 0x2a2 <LCD_Write_Single_Line>
     9b0:	89 e0       	ldi	r24, 0x09	; 9
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	09 c0       	rjmp	.+18     	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     9b6:	88 e0       	ldi	r24, 0x08	; 8
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	06 c0       	rjmp	.+12     	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     9bc:	84 e0       	ldi	r24, 0x04	; 4
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	03 c0       	rjmp	.+6      	; 0x9c8 <__LOCK_REGION_LENGTH__+0x5c8>
     9c2:	21 11       	cpse	r18, r1
     9c4:	10 ce       	rjmp	.-992    	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
     9c6:	5d cd       	rjmp	.-1350   	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
     9c8:	df 91       	pop	r29
     9ca:	cf 91       	pop	r28
     9cc:	08 95       	ret

000009ce <TimerSet>:
     9ce:	60 93 22 05 	sts	0x0522, r22	; 0x800522 <_avr_timer_M>
     9d2:	70 93 23 05 	sts	0x0523, r23	; 0x800523 <_avr_timer_M+0x1>
     9d6:	80 93 24 05 	sts	0x0524, r24	; 0x800524 <_avr_timer_M+0x2>
     9da:	90 93 25 05 	sts	0x0525, r25	; 0x800525 <_avr_timer_M+0x3>
     9de:	60 93 cc 05 	sts	0x05CC, r22	; 0x8005cc <_avr_timer_cntcurr>
     9e2:	70 93 cd 05 	sts	0x05CD, r23	; 0x8005cd <_avr_timer_cntcurr+0x1>
     9e6:	80 93 ce 05 	sts	0x05CE, r24	; 0x8005ce <_avr_timer_cntcurr+0x2>
     9ea:	90 93 cf 05 	sts	0x05CF, r25	; 0x8005cf <_avr_timer_cntcurr+0x3>
     9ee:	08 95       	ret

000009f0 <TimerOn>:
     9f0:	8b e0       	ldi	r24, 0x0B	; 11
     9f2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     9f6:	8d e7       	ldi	r24, 0x7D	; 125
     9f8:	90 e0       	ldi	r25, 0x00	; 0
     9fa:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     9fe:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     a02:	82 e0       	ldi	r24, 0x02	; 2
     a04:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     a08:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     a0c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     a10:	80 91 22 05 	lds	r24, 0x0522	; 0x800522 <_avr_timer_M>
     a14:	90 91 23 05 	lds	r25, 0x0523	; 0x800523 <_avr_timer_M+0x1>
     a18:	a0 91 24 05 	lds	r26, 0x0524	; 0x800524 <_avr_timer_M+0x2>
     a1c:	b0 91 25 05 	lds	r27, 0x0525	; 0x800525 <_avr_timer_M+0x3>
     a20:	80 93 cc 05 	sts	0x05CC, r24	; 0x8005cc <_avr_timer_cntcurr>
     a24:	90 93 cd 05 	sts	0x05CD, r25	; 0x8005cd <_avr_timer_cntcurr+0x1>
     a28:	a0 93 ce 05 	sts	0x05CE, r26	; 0x8005ce <_avr_timer_cntcurr+0x2>
     a2c:	b0 93 cf 05 	sts	0x05CF, r27	; 0x8005cf <_avr_timer_cntcurr+0x3>
     a30:	8f b7       	in	r24, 0x3f	; 63
     a32:	80 68       	ori	r24, 0x80	; 128
     a34:	8f bf       	out	0x3f, r24	; 63
     a36:	08 95       	ret

00000a38 <TimerISR>:
     a38:	ef 92       	push	r14
     a3a:	ff 92       	push	r15
     a3c:	0f 93       	push	r16
     a3e:	1f 93       	push	r17
     a40:	cf 93       	push	r28
     a42:	df 93       	push	r29
     a44:	81 e0       	ldi	r24, 0x01	; 1
     a46:	80 93 d0 05 	sts	0x05D0, r24	; 0x8005d0 <TimerFlag>
     a4a:	c1 ed       	ldi	r28, 0xD1	; 209
     a4c:	d5 e0       	ldi	r29, 0x05	; 5
     a4e:	0f 2e       	mov	r0, r31
     a50:	f1 e3       	ldi	r31, 0x31	; 49
     a52:	ef 2e       	mov	r14, r31
     a54:	f6 e0       	ldi	r31, 0x06	; 6
     a56:	ff 2e       	mov	r15, r31
     a58:	f0 2d       	mov	r31, r0
     a5a:	8e 01       	movw	r16, r28
     a5c:	4e 81       	ldd	r20, Y+6	; 0x06
     a5e:	5f 81       	ldd	r21, Y+7	; 0x07
     a60:	68 85       	ldd	r22, Y+8	; 0x08
     a62:	79 85       	ldd	r23, Y+9	; 0x09
     a64:	8a 81       	ldd	r24, Y+2	; 0x02
     a66:	9b 81       	ldd	r25, Y+3	; 0x03
     a68:	ac 81       	ldd	r26, Y+4	; 0x04
     a6a:	bd 81       	ldd	r27, Y+5	; 0x05
     a6c:	48 17       	cp	r20, r24
     a6e:	59 07       	cpc	r21, r25
     a70:	6a 07       	cpc	r22, r26
     a72:	7b 07       	cpc	r23, r27
     a74:	58 f0       	brcs	.+22     	; 0xa8c <TimerISR+0x54>
     a76:	ea 85       	ldd	r30, Y+10	; 0x0a
     a78:	fb 85       	ldd	r31, Y+11	; 0x0b
     a7a:	88 81       	ld	r24, Y
     a7c:	99 81       	ldd	r25, Y+1	; 0x01
     a7e:	09 95       	icall
     a80:	99 83       	std	Y+1, r25	; 0x01
     a82:	88 83       	st	Y, r24
     a84:	1e 82       	std	Y+6, r1	; 0x06
     a86:	1f 82       	std	Y+7, r1	; 0x07
     a88:	18 86       	std	Y+8, r1	; 0x08
     a8a:	19 86       	std	Y+9, r1	; 0x09
     a8c:	f8 01       	movw	r30, r16
     a8e:	86 81       	ldd	r24, Z+6	; 0x06
     a90:	97 81       	ldd	r25, Z+7	; 0x07
     a92:	a0 85       	ldd	r26, Z+8	; 0x08
     a94:	b1 85       	ldd	r27, Z+9	; 0x09
     a96:	05 96       	adiw	r24, 0x05	; 5
     a98:	a1 1d       	adc	r26, r1
     a9a:	b1 1d       	adc	r27, r1
     a9c:	86 83       	std	Z+6, r24	; 0x06
     a9e:	97 83       	std	Z+7, r25	; 0x07
     aa0:	a0 87       	std	Z+8, r26	; 0x08
     aa2:	b1 87       	std	Z+9, r27	; 0x09
     aa4:	2c 96       	adiw	r28, 0x0c	; 12
     aa6:	ce 15       	cp	r28, r14
     aa8:	df 05       	cpc	r29, r15
     aaa:	b9 f6       	brne	.-82     	; 0xa5a <TimerISR+0x22>
     aac:	df 91       	pop	r29
     aae:	cf 91       	pop	r28
     ab0:	1f 91       	pop	r17
     ab2:	0f 91       	pop	r16
     ab4:	ff 90       	pop	r15
     ab6:	ef 90       	pop	r14
     ab8:	08 95       	ret

00000aba <__vector_13>:
     aba:	1f 92       	push	r1
     abc:	0f 92       	push	r0
     abe:	0f b6       	in	r0, 0x3f	; 63
     ac0:	0f 92       	push	r0
     ac2:	11 24       	eor	r1, r1
     ac4:	0b b6       	in	r0, 0x3b	; 59
     ac6:	0f 92       	push	r0
     ac8:	2f 93       	push	r18
     aca:	3f 93       	push	r19
     acc:	4f 93       	push	r20
     ace:	5f 93       	push	r21
     ad0:	6f 93       	push	r22
     ad2:	7f 93       	push	r23
     ad4:	8f 93       	push	r24
     ad6:	9f 93       	push	r25
     ad8:	af 93       	push	r26
     ada:	bf 93       	push	r27
     adc:	ef 93       	push	r30
     ade:	ff 93       	push	r31
     ae0:	80 91 cc 05 	lds	r24, 0x05CC	; 0x8005cc <_avr_timer_cntcurr>
     ae4:	90 91 cd 05 	lds	r25, 0x05CD	; 0x8005cd <_avr_timer_cntcurr+0x1>
     ae8:	a0 91 ce 05 	lds	r26, 0x05CE	; 0x8005ce <_avr_timer_cntcurr+0x2>
     aec:	b0 91 cf 05 	lds	r27, 0x05CF	; 0x8005cf <_avr_timer_cntcurr+0x3>
     af0:	01 97       	sbiw	r24, 0x01	; 1
     af2:	a1 09       	sbc	r26, r1
     af4:	b1 09       	sbc	r27, r1
     af6:	80 93 cc 05 	sts	0x05CC, r24	; 0x8005cc <_avr_timer_cntcurr>
     afa:	90 93 cd 05 	sts	0x05CD, r25	; 0x8005cd <_avr_timer_cntcurr+0x1>
     afe:	a0 93 ce 05 	sts	0x05CE, r26	; 0x8005ce <_avr_timer_cntcurr+0x2>
     b02:	b0 93 cf 05 	sts	0x05CF, r27	; 0x8005cf <_avr_timer_cntcurr+0x3>
     b06:	89 2b       	or	r24, r25
     b08:	8a 2b       	or	r24, r26
     b0a:	8b 2b       	or	r24, r27
     b0c:	89 f4       	brne	.+34     	; 0xb30 <__vector_13+0x76>
     b0e:	94 df       	rcall	.-216    	; 0xa38 <TimerISR>
     b10:	80 91 22 05 	lds	r24, 0x0522	; 0x800522 <_avr_timer_M>
     b14:	90 91 23 05 	lds	r25, 0x0523	; 0x800523 <_avr_timer_M+0x1>
     b18:	a0 91 24 05 	lds	r26, 0x0524	; 0x800524 <_avr_timer_M+0x2>
     b1c:	b0 91 25 05 	lds	r27, 0x0525	; 0x800525 <_avr_timer_M+0x3>
     b20:	80 93 cc 05 	sts	0x05CC, r24	; 0x8005cc <_avr_timer_cntcurr>
     b24:	90 93 cd 05 	sts	0x05CD, r25	; 0x8005cd <_avr_timer_cntcurr+0x1>
     b28:	a0 93 ce 05 	sts	0x05CE, r26	; 0x8005ce <_avr_timer_cntcurr+0x2>
     b2c:	b0 93 cf 05 	sts	0x05CF, r27	; 0x8005cf <_avr_timer_cntcurr+0x3>
     b30:	ff 91       	pop	r31
     b32:	ef 91       	pop	r30
     b34:	bf 91       	pop	r27
     b36:	af 91       	pop	r26
     b38:	9f 91       	pop	r25
     b3a:	8f 91       	pop	r24
     b3c:	7f 91       	pop	r23
     b3e:	6f 91       	pop	r22
     b40:	5f 91       	pop	r21
     b42:	4f 91       	pop	r20
     b44:	3f 91       	pop	r19
     b46:	2f 91       	pop	r18
     b48:	0f 90       	pop	r0
     b4a:	0b be       	out	0x3b, r0	; 59
     b4c:	0f 90       	pop	r0
     b4e:	0f be       	out	0x3f, r0	; 63
     b50:	0f 90       	pop	r0
     b52:	1f 90       	pop	r1
     b54:	18 95       	reti

00000b56 <Shift_Init>:

void Shift_Init() {
    DDRC = Set_Bit(DDRC, DATA);
     b56:	3a 9a       	sbi	0x07, 2	; 7
    DDRC = Set_Bit(DDRC, SHIFT);
     b58:	3b 9a       	sbi	0x07, 3	; 7
    DDRC = Set_Bit(DDRC, STORE);
     b5a:	3c 9a       	sbi	0x07, 4	; 7
     b5c:	08 95       	ret

00000b5e <Shift_Data_High>:
}

//Set Data line high
void Shift_Data_High() {
    PORTC = Set_Bit(PORTC, DATA);
     b5e:	42 9a       	sbi	0x08, 2	; 8
     b60:	08 95       	ret

00000b62 <Shift_Data_Low>:
}

//Set Data line low
void Shift_Data_Low() {
    PORTC = Clear_Bit(PORTC, DATA);
     b62:	42 98       	cbi	0x08, 2	; 8
     b64:	08 95       	ret

00000b66 <Shift_Pulse>:
}

//Pulse Shift Clock
void Shift_Pulse() {
    PORTC = Set_Bit(PORTC, SHIFT);
     b66:	43 9a       	sbi	0x08, 3	; 8
    PORTC = Clear_Bit(PORTC, SHIFT);
     b68:	43 98       	cbi	0x08, 3	; 8
     b6a:	08 95       	ret

00000b6c <Shift_Store>:
}

//Pulse Store Clock
void Shift_Store() {
    PORTC = Set_Bit(PORTC, STORE);
     b6c:	44 9a       	sbi	0x08, 4	; 8
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     b6e:	81 e0       	ldi	r24, 0x01	; 1
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	fc 01       	movw	r30, r24
     b74:	31 97       	sbiw	r30, 0x01	; 1
     b76:	f1 f7       	brne	.-4      	; 0xb74 <Shift_Store+0x8>
    //SET_BIT(SHIFT_PORT,STORE_LINE);
    _delay_loop_2(1);

    //CLR_BIT(SHIFT_PORT,STORE_LINE);
    PORTC = Clear_Bit(PORTC, STORE);
     b78:	44 98       	cbi	0x08, 4	; 8
     b7a:	01 97       	sbiw	r24, 0x01	; 1
     b7c:	f1 f7       	brne	.-4      	; 0xb7a <Shift_Store+0xe>
     b7e:	08 95       	ret

00000b80 <Shift_transmit_data>:
    _delay_loop_2(1);
}


void Shift_transmit_data(unsigned char data) {
     b80:	cf 93       	push	r28
     b82:	df 93       	push	r29
     b84:	d8 2f       	mov	r29, r24
     b86:	c8 e0       	ldi	r28, 0x08	; 8
    for(unsigned char i=0;i<8;i++) {
        if(data & 0x80) {
     b88:	dd 23       	and	r29, r29
     b8a:	14 f4       	brge	.+4      	; 0xb90 <Shift_transmit_data+0x10>
            Shift_Data_High();
     b8c:	e8 df       	rcall	.-48     	; 0xb5e <Shift_Data_High>
     b8e:	01 c0       	rjmp	.+2      	; 0xb92 <Shift_transmit_data+0x12>
            } else {
            Shift_Data_Low();
     b90:	e8 df       	rcall	.-48     	; 0xb62 <Shift_Data_Low>
        }

        Shift_Pulse();
     b92:	e9 df       	rcall	.-46     	; 0xb66 <Shift_Pulse>
     b94:	dd 0f       	add	r29, r29
        data=data << 1;
     b96:	c1 50       	subi	r28, 0x01	; 1
    _delay_loop_2(1);
}


void Shift_transmit_data(unsigned char data) {
    for(unsigned char i=0;i<8;i++) {
     b98:	b9 f7       	brne	.-18     	; 0xb88 <Shift_transmit_data+0x8>

        Shift_Pulse();
        data=data << 1;
    }

    Shift_Store();
     b9a:	e8 df       	rcall	.-48     	; 0xb6c <Shift_Store>
     b9c:	df 91       	pop	r29
     b9e:	cf 91       	pop	r28
     ba0:	08 95       	ret

00000ba2 <RGB_Matrix_Tick>:
     ba2:	ef 92       	push	r14
    }

    return state;
}

int RGB_Matrix_Tick(int state){
     ba4:	ff 92       	push	r15
     ba6:	0f 93       	push	r16
     ba8:	1f 93       	push	r17
     baa:	cf 93       	push	r28
     bac:	df 93       	push	r29
    static unsigned char play_note;
    static unsigned char rest_note;
    static unsigned char note_to_hit;
    switch(state){
     bae:	81 30       	cpi	r24, 0x01	; 1
     bb0:	91 05       	cpc	r25, r1
     bb2:	59 f0       	breq	.+22     	; 0xbca <RGB_Matrix_Tick+0x28>
     bb4:	1c f4       	brge	.+6      	; 0xbbc <RGB_Matrix_Tick+0x1a>
     bb6:	00 97       	sbiw	r24, 0x00	; 0
     bb8:	81 f1       	breq	.+96     	; 0xc1a <RGB_Matrix_Tick+0x78>
     bba:	19 c0       	rjmp	.+50     	; 0xbee <RGB_Matrix_Tick+0x4c>
     bbc:	82 30       	cpi	r24, 0x02	; 2
     bbe:	91 05       	cpc	r25, r1
     bc0:	69 f0       	breq	.+26     	; 0xbdc <RGB_Matrix_Tick+0x3a>
     bc2:	83 30       	cpi	r24, 0x03	; 3
     bc4:	91 05       	cpc	r25, r1
     bc6:	49 f1       	breq	.+82     	; 0xc1a <RGB_Matrix_Tick+0x78>
     bc8:	12 c0       	rjmp	.+36     	; 0xbee <RGB_Matrix_Tick+0x4c>
        case RGB_INIT:
            state = RGB_MENU;
            break;
        case RGB_MENU:
            if(playing){
     bca:	80 91 b8 05 	lds	r24, 0x05B8	; 0x8005b8 <playing>
     bce:	88 23       	and	r24, r24
     bd0:	21 f1       	breq	.+72     	; 0xc1a <RGB_Matrix_Tick+0x78>
                play_note = 0;
     bd2:	10 92 b2 05 	sts	0x05B2, r1	; 0x8005b2 <play_note.2287>
                rest_note = 0;
     bd6:	10 92 b1 05 	sts	0x05B1, r1	; 0x8005b1 <rest_note.2288>
                state = RGB_SONG;
                break;
     bda:	14 c0       	rjmp	.+40     	; 0xc04 <RGB_Matrix_Tick+0x62>
            else{
                state = RGB_MENU;
                break;
            }    
        case RGB_SONG:
            if(song_finished || !playing){
     bdc:	80 91 ba 05 	lds	r24, 0x05BA	; 0x8005ba <song_finished>
     be0:	81 11       	cpse	r24, r1
     be2:	16 c0       	rjmp	.+44     	; 0xc10 <RGB_Matrix_Tick+0x6e>
     be4:	80 91 b8 05 	lds	r24, 0x05B8	; 0x8005b8 <playing>
     be8:	81 11       	cpse	r24, r1
     bea:	0c c0       	rjmp	.+24     	; 0xc04 <RGB_Matrix_Tick+0x62>
     bec:	11 c0       	rjmp	.+34     	; 0xc10 <RGB_Matrix_Tick+0x6e>
            }
        case RGB_RESET:
            state = RGB_MENU;
            break;
    }
    switch(state){
     bee:	82 30       	cpi	r24, 0x02	; 2
     bf0:	91 05       	cpc	r25, r1
     bf2:	41 f0       	breq	.+16     	; 0xc04 <RGB_Matrix_Tick+0x62>
     bf4:	83 30       	cpi	r24, 0x03	; 3
     bf6:	91 05       	cpc	r25, r1
     bf8:	59 f0       	breq	.+22     	; 0xc10 <RGB_Matrix_Tick+0x6e>
     bfa:	81 30       	cpi	r24, 0x01	; 1
     bfc:	91 05       	cpc	r25, r1
     bfe:	09 f0       	breq	.+2      	; 0xc02 <RGB_Matrix_Tick+0x60>
     c00:	dc c0       	rjmp	.+440    	; 0xdba <RGB_Matrix_Tick+0x218>
     c02:	0b c0       	rjmp	.+22     	; 0xc1a <RGB_Matrix_Tick+0x78>
     c04:	0b eb       	ldi	r16, 0xBB	; 187
     c06:	15 e0       	ldi	r17, 0x05	; 5
     c08:	23 ec       	ldi	r18, 0xC3	; 195
     c0a:	35 e0       	ldi	r19, 0x05	; 5
    }

    return state;
}

int RGB_Matrix_Tick(int state){
     c0c:	f8 01       	movw	r30, r16
     c0e:	3a c0       	rjmp	.+116    	; 0xc84 <RGB_Matrix_Tick+0xe2>
     c10:	eb eb       	ldi	r30, 0xBB	; 187
     c12:	f5 e0       	ldi	r31, 0x05	; 5
     c14:	83 ec       	ldi	r24, 0xC3	; 195
     c16:	95 e0       	ldi	r25, 0x05	; 5
     c18:	c2 c0       	rjmp	.+388    	; 0xd9e <RGB_Matrix_Tick+0x1fc>
    }
    switch(state){
        case RGB_INIT:
            break;
        case RGB_MENU:
            if(LEFT || RIGHT || UP || DOWN){
     c1a:	80 91 cb 05 	lds	r24, 0x05CB	; 0x8005cb <LEFT>
     c1e:	88 23       	and	r24, r24
     c20:	49 f0       	breq	.+18     	; 0xc34 <RGB_Matrix_Tick+0x92>
     c22:	00 e0       	ldi	r16, 0x00	; 0
     c24:	11 e0       	ldi	r17, 0x01	; 1
    }

    return state;
}

int RGB_Matrix_Tick(int state){
     c26:	c0 e0       	ldi	r28, 0x00	; 0
     c28:	d0 e0       	ldi	r29, 0x00	; 0
        case RGB_INIT:
            break;
        case RGB_MENU:
            if(LEFT || RIGHT || UP || DOWN){
                for(unsigned char i = 0; i < 8; i++){
                    Shift_transmit_data(128 >> i);
     c2a:	68 94       	set
     c2c:	ee 24       	eor	r14, r14
     c2e:	e7 f8       	bld	r14, 7
     c30:	f1 2c       	mov	r15, r1
     c32:	0d c0       	rjmp	.+26     	; 0xc4e <RGB_Matrix_Tick+0xac>
    }
    switch(state){
        case RGB_INIT:
            break;
        case RGB_MENU:
            if(LEFT || RIGHT || UP || DOWN){
     c34:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <RIGHT>
     c38:	81 11       	cpse	r24, r1
     c3a:	f3 cf       	rjmp	.-26     	; 0xc22 <RGB_Matrix_Tick+0x80>
     c3c:	80 91 c9 05 	lds	r24, 0x05C9	; 0x8005c9 <UP>
     c40:	81 11       	cpse	r24, r1
     c42:	ef cf       	rjmp	.-34     	; 0xc22 <RGB_Matrix_Tick+0x80>
     c44:	80 91 c8 05 	lds	r24, 0x05C8	; 0x8005c8 <DOWN>
     c48:	81 11       	cpse	r24, r1
     c4a:	eb cf       	rjmp	.-42     	; 0xc22 <RGB_Matrix_Tick+0x80>
     c4c:	14 c0       	rjmp	.+40     	; 0xc76 <RGB_Matrix_Tick+0xd4>
                for(unsigned char i = 0; i < 8; i++){
                    Shift_transmit_data(128 >> i);
     c4e:	c7 01       	movw	r24, r14
     c50:	0c 2e       	mov	r0, r28
     c52:	02 c0       	rjmp	.+4      	; 0xc58 <RGB_Matrix_Tick+0xb6>
     c54:	95 95       	asr	r25
     c56:	87 95       	ror	r24
     c58:	0a 94       	dec	r0
     c5a:	e2 f7       	brpl	.-8      	; 0xc54 <RGB_Matrix_Tick+0xb2>
     c5c:	91 df       	rcall	.-222    	; 0xb80 <Shift_transmit_data>
                    Shift_transmit_data(~pic[i]);
     c5e:	f8 01       	movw	r30, r16
     c60:	81 91       	ld	r24, Z+
     c62:	8f 01       	movw	r16, r30
     c64:	80 95       	com	r24
     c66:	8c df       	rcall	.-232    	; 0xb80 <Shift_transmit_data>
                    delay_ms(3);
     c68:	83 e0       	ldi	r24, 0x03	; 3
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	d1 da       	rcall	.-2654   	; 0x210 <delay_ms>
     c6e:	21 96       	adiw	r28, 0x01	; 1
    switch(state){
        case RGB_INIT:
            break;
        case RGB_MENU:
            if(LEFT || RIGHT || UP || DOWN){
                for(unsigned char i = 0; i < 8; i++){
     c70:	c8 30       	cpi	r28, 0x08	; 8
     c72:	d1 05       	cpc	r29, r1
                    Shift_transmit_data(128 >> i);
                    Shift_transmit_data(~pic[i]);
                    delay_ms(3);
                }
            }
            Shift_transmit_data(0);
     c74:	61 f7       	brne	.-40     	; 0xc4e <RGB_Matrix_Tick+0xac>
     c76:	80 e0       	ldi	r24, 0x00	; 0
            Shift_transmit_data(0);
     c78:	83 df       	rcall	.-250    	; 0xb80 <Shift_transmit_data>
     c7a:	80 e0       	ldi	r24, 0x00	; 0
     c7c:	81 df       	rcall	.-254    	; 0xb80 <Shift_transmit_data>
            
            break;
     c7e:	81 e0       	ldi	r24, 0x01	; 1
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	9b c0       	rjmp	.+310    	; 0xdba <RGB_Matrix_Tick+0x218>
        case RGB_SONG:
            for(unsigned j = 0; j < 8; j++){
                RGB_DISPLAY_NOTES[j] <<= 1;
     c84:	80 81       	ld	r24, Z
     c86:	88 0f       	add	r24, r24
     c88:	81 93       	st	Z+, r24
            Shift_transmit_data(0);
            Shift_transmit_data(0);
            
            break;
        case RGB_SONG:
            for(unsigned j = 0; j < 8; j++){
     c8a:	e2 17       	cp	r30, r18
     c8c:	f3 07       	cpc	r31, r19
     c8e:	d1 f7       	brne	.-12     	; 0xc84 <RGB_Matrix_Tick+0xe2>
                RGB_DISPLAY_NOTES[j] <<= 1;
            }
            if(play_note < songs[current_song_choice].timing[current_note]){
     c90:	20 91 c6 05 	lds	r18, 0x05C6	; 0x8005c6 <current_song_choice>
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	80 91 c7 05 	lds	r24, 0x05C7	; 0x8005c7 <current_note>
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	40 91 b2 05 	lds	r20, 0x05B2	; 0x8005b2 <play_note.2287>
     ca0:	6c e1       	ldi	r22, 0x1C	; 28
     ca2:	74 e0       	ldi	r23, 0x04	; 4
     ca4:	26 9f       	mul	r18, r22
     ca6:	f0 01       	movw	r30, r0
     ca8:	27 9f       	mul	r18, r23
     caa:	f0 0d       	add	r31, r0
     cac:	36 9f       	mul	r19, r22
     cae:	f0 0d       	add	r31, r0
     cb0:	11 24       	eor	r1, r1
     cb2:	e8 0f       	add	r30, r24
     cb4:	f9 1f       	adc	r31, r25
     cb6:	e7 57       	subi	r30, 0x77	; 119
     cb8:	f7 4f       	sbci	r31, 0xF7	; 247
     cba:	50 81       	ld	r21, Z
     cbc:	45 17       	cp	r20, r21
     cbe:	e0 f5       	brcc	.+120    	; 0xd38 <RGB_Matrix_Tick+0x196>
                note_to_hit = songs[current_song_choice].hit[current_note];
     cc0:	26 9f       	mul	r18, r22
     cc2:	f0 01       	movw	r30, r0
     cc4:	27 9f       	mul	r18, r23
     cc6:	f0 0d       	add	r31, r0
     cc8:	36 9f       	mul	r19, r22
     cca:	f0 0d       	add	r31, r0
     ccc:	11 24       	eor	r1, r1
     cce:	8e 0f       	add	r24, r30
     cd0:	9f 1f       	adc	r25, r31
     cd2:	fc 01       	movw	r30, r24
     cd4:	eb 54       	subi	r30, 0x4B	; 75
     cd6:	f6 4f       	sbci	r31, 0xF6	; 246
     cd8:	80 81       	ld	r24, Z
                
                if(note_to_hit == 1){
     cda:	81 30       	cpi	r24, 0x01	; 1
     cdc:	49 f4       	brne	.+18     	; 0xcf0 <RGB_Matrix_Tick+0x14e>
                    RGB_DISPLAY_NOTES[0] |= 1;
     cde:	eb eb       	ldi	r30, 0xBB	; 187
     ce0:	f5 e0       	ldi	r31, 0x05	; 5
     ce2:	80 81       	ld	r24, Z
     ce4:	81 60       	ori	r24, 0x01	; 1
     ce6:	80 83       	st	Z, r24
                    RGB_DISPLAY_NOTES[1] |= 1;
     ce8:	81 81       	ldd	r24, Z+1	; 0x01
     cea:	81 60       	ori	r24, 0x01	; 1
     cec:	81 83       	std	Z+1, r24	; 0x01
     cee:	20 c0       	rjmp	.+64     	; 0xd30 <RGB_Matrix_Tick+0x18e>
                }
                else if(note_to_hit == 2){
     cf0:	82 30       	cpi	r24, 0x02	; 2
     cf2:	49 f4       	brne	.+18     	; 0xd06 <RGB_Matrix_Tick+0x164>
                    RGB_DISPLAY_NOTES[2] |= 1;
     cf4:	eb eb       	ldi	r30, 0xBB	; 187
     cf6:	f5 e0       	ldi	r31, 0x05	; 5
     cf8:	82 81       	ldd	r24, Z+2	; 0x02
     cfa:	81 60       	ori	r24, 0x01	; 1
     cfc:	82 83       	std	Z+2, r24	; 0x02
                    RGB_DISPLAY_NOTES[3] |= 1;
     cfe:	83 81       	ldd	r24, Z+3	; 0x03
     d00:	81 60       	ori	r24, 0x01	; 1
     d02:	83 83       	std	Z+3, r24	; 0x03
     d04:	15 c0       	rjmp	.+42     	; 0xd30 <RGB_Matrix_Tick+0x18e>
                }
                else if(note_to_hit == 4){
     d06:	84 30       	cpi	r24, 0x04	; 4
     d08:	49 f4       	brne	.+18     	; 0xd1c <RGB_Matrix_Tick+0x17a>
                    RGB_DISPLAY_NOTES[4] |= 1;
     d0a:	eb eb       	ldi	r30, 0xBB	; 187
     d0c:	f5 e0       	ldi	r31, 0x05	; 5
     d0e:	84 81       	ldd	r24, Z+4	; 0x04
     d10:	81 60       	ori	r24, 0x01	; 1
     d12:	84 83       	std	Z+4, r24	; 0x04
                    RGB_DISPLAY_NOTES[5] |= 1;
     d14:	85 81       	ldd	r24, Z+5	; 0x05
     d16:	81 60       	ori	r24, 0x01	; 1
     d18:	85 83       	std	Z+5, r24	; 0x05
     d1a:	0a c0       	rjmp	.+20     	; 0xd30 <RGB_Matrix_Tick+0x18e>
                }    
                else if(note_to_hit == 8){
     d1c:	88 30       	cpi	r24, 0x08	; 8
     d1e:	41 f4       	brne	.+16     	; 0xd30 <RGB_Matrix_Tick+0x18e>
                    RGB_DISPLAY_NOTES[6] |= 1;
     d20:	eb eb       	ldi	r30, 0xBB	; 187
     d22:	f5 e0       	ldi	r31, 0x05	; 5
     d24:	86 81       	ldd	r24, Z+6	; 0x06
     d26:	81 60       	ori	r24, 0x01	; 1
     d28:	86 83       	std	Z+6, r24	; 0x06
                    RGB_DISPLAY_NOTES[7] |= 1;
     d2a:	87 81       	ldd	r24, Z+7	; 0x07
     d2c:	81 60       	ori	r24, 0x01	; 1
     d2e:	87 83       	std	Z+7, r24	; 0x07
                }    
                play_note++;        
     d30:	4f 5f       	subi	r20, 0xFF	; 255
     d32:	40 93 b2 05 	sts	0x05B2, r20	; 0x8005b2 <play_note.2287>
     d36:	3a c0       	rjmp	.+116    	; 0xdac <RGB_Matrix_Tick+0x20a>
            }
            else{
                note_to_hit = 0;
                if(rest_note < songs[current_song_choice].rest_timing[current_note]){
     d38:	40 91 b1 05 	lds	r20, 0x05B1	; 0x8005b1 <rest_note.2288>
     d3c:	6c e1       	ldi	r22, 0x1C	; 28
     d3e:	74 e0       	ldi	r23, 0x04	; 4
     d40:	26 9f       	mul	r18, r22
     d42:	f0 01       	movw	r30, r0
     d44:	27 9f       	mul	r18, r23
     d46:	f0 0d       	add	r31, r0
     d48:	36 9f       	mul	r19, r22
     d4a:	f0 0d       	add	r31, r0
     d4c:	11 24       	eor	r1, r1
     d4e:	8e 0f       	add	r24, r30
     d50:	9f 1f       	adc	r25, r31
     d52:	fc 01       	movw	r30, r24
     d54:	e1 5e       	subi	r30, 0xE1	; 225
     d56:	f6 4f       	sbci	r31, 0xF6	; 246
     d58:	80 81       	ld	r24, Z
     d5a:	48 17       	cp	r20, r24
     d5c:	20 f4       	brcc	.+8      	; 0xd66 <RGB_Matrix_Tick+0x1c4>
                    rest_note++;
     d5e:	4f 5f       	subi	r20, 0xFF	; 255
     d60:	40 93 b1 05 	sts	0x05B1, r20	; 0x8005b1 <rest_note.2288>
     d64:	23 c0       	rjmp	.+70     	; 0xdac <RGB_Matrix_Tick+0x20a>
                }
                else{
                    play_note = 0;
     d66:	10 92 b2 05 	sts	0x05B2, r1	; 0x8005b2 <play_note.2287>
                    rest_note = 0;   
     d6a:	10 92 b1 05 	sts	0x05B1, r1	; 0x8005b1 <rest_note.2288>
     d6e:	1e c0       	rjmp	.+60     	; 0xdac <RGB_Matrix_Tick+0x20a>
                }     
            }                   
            for(unsigned char i = 0; i < 8; i++){
                Shift_transmit_data(128 >> i);
     d70:	c7 01       	movw	r24, r14
     d72:	0c 2e       	mov	r0, r28
     d74:	02 c0       	rjmp	.+4      	; 0xd7a <RGB_Matrix_Tick+0x1d8>
     d76:	95 95       	asr	r25
     d78:	87 95       	ror	r24
     d7a:	0a 94       	dec	r0
     d7c:	e2 f7       	brpl	.-8      	; 0xd76 <RGB_Matrix_Tick+0x1d4>
                Shift_transmit_data(~RGB_DISPLAY_NOTES[i]);
     d7e:	00 df       	rcall	.-512    	; 0xb80 <Shift_transmit_data>
     d80:	f8 01       	movw	r30, r16
     d82:	81 91       	ld	r24, Z+
     d84:	8f 01       	movw	r16, r30
     d86:	80 95       	com	r24
                delay_ms(5);
     d88:	fb de       	rcall	.-522    	; 0xb80 <Shift_transmit_data>
     d8a:	85 e0       	ldi	r24, 0x05	; 5
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	40 da       	rcall	.-2944   	; 0x210 <delay_ms>
     d90:	21 96       	adiw	r28, 0x01	; 1
                else{
                    play_note = 0;
                    rest_note = 0;   
                }     
            }                   
            for(unsigned char i = 0; i < 8; i++){
     d92:	c8 30       	cpi	r28, 0x08	; 8
     d94:	d1 05       	cpc	r29, r1
     d96:	61 f7       	brne	.-40     	; 0xd70 <RGB_Matrix_Tick+0x1ce>
     d98:	82 e0       	ldi	r24, 0x02	; 2
     d9a:	90 e0       	ldi	r25, 0x00	; 0
     d9c:	0e c0       	rjmp	.+28     	; 0xdba <RGB_Matrix_Tick+0x218>
            
            }
            break;
        case RGB_RESET:
            for(unsigned char r = 0; r < 8; r++){
                RGB_DISPLAY_NOTES[r] = 0;
     d9e:	11 92       	st	Z+, r1
                delay_ms(5);
            
            }
            break;
        case RGB_RESET:
            for(unsigned char r = 0; r < 8; r++){
     da0:	e8 17       	cp	r30, r24
     da2:	f9 07       	cpc	r31, r25
     da4:	e1 f7       	brne	.-8      	; 0xd9e <RGB_Matrix_Tick+0x1fc>
     da6:	83 e0       	ldi	r24, 0x03	; 3
     da8:	90 e0       	ldi	r25, 0x00	; 0
                RGB_DISPLAY_NOTES[r] = 0;
            }
            break;
    }
    
    return state;
     daa:	07 c0       	rjmp	.+14     	; 0xdba <RGB_Matrix_Tick+0x218>
    }

    return state;
}

int RGB_Matrix_Tick(int state){
     dac:	c0 e0       	ldi	r28, 0x00	; 0
     dae:	d0 e0       	ldi	r29, 0x00	; 0
                    play_note = 0;
                    rest_note = 0;   
                }     
            }                   
            for(unsigned char i = 0; i < 8; i++){
                Shift_transmit_data(128 >> i);
     db0:	68 94       	set
     db2:	ee 24       	eor	r14, r14
     db4:	e7 f8       	bld	r14, 7
     db6:	f1 2c       	mov	r15, r1
     db8:	db cf       	rjmp	.-74     	; 0xd70 <RGB_Matrix_Tick+0x1ce>
            }
            break;
    }
    
    return state;
}
     dba:	df 91       	pop	r29
     dbc:	cf 91       	pop	r28
     dbe:	1f 91       	pop	r17
     dc0:	0f 91       	pop	r16
     dc2:	ff 90       	pop	r15
     dc4:	ef 90       	pop	r14
     dc6:	08 95       	ret

00000dc8 <set_PWM>:

// 0.954 hz is lowest frequency possible with this function,
// based on settings in PWM_on()
// Passing in 0 as the frequency will stop the speaker from generating sound
void set_PWM(double frequency) {
     dc8:	cf 92       	push	r12
     dca:	df 92       	push	r13
     dcc:	ef 92       	push	r14
     dce:	ff 92       	push	r15
     dd0:	6b 01       	movw	r12, r22
     dd2:	7c 01       	movw	r14, r24
	static double current_frequency; // Keeps track of the currently set frequency
	// Will only update the registers when the frequency changes, otherwise allows
	// music to play uninterrupted.
	if (frequency != current_frequency) {
     dd4:	9b 01       	movw	r18, r22
     dd6:	ac 01       	movw	r20, r24
     dd8:	60 91 b4 05 	lds	r22, 0x05B4	; 0x8005b4 <current_frequency.2121>
     ddc:	70 91 b5 05 	lds	r23, 0x05B5	; 0x8005b5 <current_frequency.2121+0x1>
     de0:	80 91 b6 05 	lds	r24, 0x05B6	; 0x8005b6 <current_frequency.2121+0x2>
     de4:	90 91 b7 05 	lds	r25, 0x05B7	; 0x8005b7 <current_frequency.2121+0x3>
     de8:	36 d2       	rcall	.+1132   	; 0x1256 <__cmpsf2>
     dea:	88 23       	and	r24, r24
     dec:	09 f4       	brne	.+2      	; 0xdf0 <set_PWM+0x28>
     dee:	52 c0       	rjmp	.+164    	; 0xe94 <set_PWM+0xcc>
		if (!frequency) { TCCR3B &= 0x08; } //stops timer/counter
     df0:	20 e0       	ldi	r18, 0x00	; 0
     df2:	30 e0       	ldi	r19, 0x00	; 0
     df4:	a9 01       	movw	r20, r18
     df6:	c7 01       	movw	r24, r14
     df8:	b6 01       	movw	r22, r12
     dfa:	2d d2       	rcall	.+1114   	; 0x1256 <__cmpsf2>
     dfc:	81 11       	cpse	r24, r1
     dfe:	06 c0       	rjmp	.+12     	; 0xe0c <set_PWM+0x44>
     e00:	e1 e9       	ldi	r30, 0x91	; 145
     e02:	f0 e0       	ldi	r31, 0x00	; 0
     e04:	80 81       	ld	r24, Z
     e06:	88 70       	andi	r24, 0x08	; 8
     e08:	80 83       	st	Z, r24
     e0a:	05 c0       	rjmp	.+10     	; 0xe16 <set_PWM+0x4e>
		else { TCCR3B |= 0x03; } // resumes/continues timer/counter
     e0c:	e1 e9       	ldi	r30, 0x91	; 145
     e0e:	f0 e0       	ldi	r31, 0x00	; 0
     e10:	80 81       	ld	r24, Z
     e12:	83 60       	ori	r24, 0x03	; 3
     e14:	80 83       	st	Z, r24
		
		// prevents OCR3A from overflowing, using prescaler 64
		// 0.954 is smallest frequency that will not result in overflow
		if (frequency < 0.954) { OCR3A = 0xFFFF; }
     e16:	28 e5       	ldi	r18, 0x58	; 88
     e18:	39 e3       	ldi	r19, 0x39	; 57
     e1a:	44 e7       	ldi	r20, 0x74	; 116
     e1c:	5f e3       	ldi	r21, 0x3F	; 63
     e1e:	c7 01       	movw	r24, r14
     e20:	b6 01       	movw	r22, r12
     e22:	19 d2       	rcall	.+1074   	; 0x1256 <__cmpsf2>
     e24:	88 23       	and	r24, r24
     e26:	3c f4       	brge	.+14     	; 0xe36 <set_PWM+0x6e>
     e28:	8f ef       	ldi	r24, 0xFF	; 255
     e2a:	9f ef       	ldi	r25, 0xFF	; 255
     e2c:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     e30:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     e34:	23 c0       	rjmp	.+70     	; 0xe7c <set_PWM+0xb4>
		
		// prevents OCR0A from underflowing, using prescaler 64					
		// 31250 is largest frequency that will not result in underflow
		else if (frequency > 31250) { OCR3A = 0x0000; }
     e36:	20 e0       	ldi	r18, 0x00	; 0
     e38:	34 e2       	ldi	r19, 0x24	; 36
     e3a:	44 ef       	ldi	r20, 0xF4	; 244
     e3c:	56 e4       	ldi	r21, 0x46	; 70
     e3e:	c7 01       	movw	r24, r14
     e40:	b6 01       	movw	r22, r12
     e42:	1b d3       	rcall	.+1590   	; 0x147a <__gesf2>
     e44:	18 16       	cp	r1, r24
     e46:	2c f4       	brge	.+10     	; 0xe52 <set_PWM+0x8a>
     e48:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     e4c:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     e50:	15 c0       	rjmp	.+42     	; 0xe7c <set_PWM+0xb4>
		
		// set OCR3A based on desired frequency
		else { OCR3A = (short)(8000000 / (128 * frequency)) - 1; }
     e52:	20 e0       	ldi	r18, 0x00	; 0
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	40 e0       	ldi	r20, 0x00	; 0
     e58:	53 e4       	ldi	r21, 0x43	; 67
     e5a:	c7 01       	movw	r24, r14
     e5c:	b6 01       	movw	r22, r12
     e5e:	11 d3       	rcall	.+1570   	; 0x1482 <__mulsf3>
     e60:	9b 01       	movw	r18, r22
     e62:	ac 01       	movw	r20, r24
     e64:	60 e0       	ldi	r22, 0x00	; 0
     e66:	74 e2       	ldi	r23, 0x24	; 36
     e68:	84 ef       	ldi	r24, 0xF4	; 244
     e6a:	9a e4       	ldi	r25, 0x4A	; 74
     e6c:	f8 d1       	rcall	.+1008   	; 0x125e <__divsf3>
     e6e:	5f d2       	rcall	.+1214   	; 0x132e <__fixsfsi>
     e70:	61 50       	subi	r22, 0x01	; 1
     e72:	71 09       	sbc	r23, r1
     e74:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     e78:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>

		TCNT3 = 0; // resets counter
     e7c:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
     e80:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
		current_frequency = frequency; // Updates the current frequency
     e84:	c0 92 b4 05 	sts	0x05B4, r12	; 0x8005b4 <current_frequency.2121>
     e88:	d0 92 b5 05 	sts	0x05B5, r13	; 0x8005b5 <current_frequency.2121+0x1>
     e8c:	e0 92 b6 05 	sts	0x05B6, r14	; 0x8005b6 <current_frequency.2121+0x2>
     e90:	f0 92 b7 05 	sts	0x05B7, r15	; 0x8005b7 <current_frequency.2121+0x3>
	}
}
     e94:	ff 90       	pop	r15
     e96:	ef 90       	pop	r14
     e98:	df 90       	pop	r13
     e9a:	cf 90       	pop	r12
     e9c:	08 95       	ret

00000e9e <PWM_on>:

void PWM_on() {
	TCCR3A = (1 << COM3A0);
     e9e:	80 e4       	ldi	r24, 0x40	; 64
     ea0:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	// COM3A0: Toggle PB3 on compare match between counter and OCR0A
	TCCR3B = (1 << WGM32) | (1 << CS31) | (1 << CS30);
     ea4:	8b e0       	ldi	r24, 0x0B	; 11
     ea6:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
	// WGM02: When counter (TCNT0) matches OCR0A, reset counter
	// CS01 & CS30: Set a prescaler of 64
	set_PWM(0);
     eaa:	60 e0       	ldi	r22, 0x00	; 0
     eac:	70 e0       	ldi	r23, 0x00	; 0
     eae:	cb 01       	movw	r24, r22
     eb0:	8b cf       	rjmp	.-234    	; 0xdc8 <set_PWM>
     eb2:	08 95       	ret

00000eb4 <PWM_off>:
}

void PWM_off() {
	TCCR3A = 0x00;
     eb4:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	TCCR3B = 0x00;
     eb8:	10 92 91 00 	sts	0x0091, r1	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
     ebc:	08 95       	ret

00000ebe <Note_Tick>:

int Note_Tick(int state){
     ebe:	cf 93       	push	r28
    static unsigned char play_note;
    static unsigned char rest_note;
    static unsigned char note_to_hit;
    
    switch(state){
     ec0:	81 30       	cpi	r24, 0x01	; 1
     ec2:	91 05       	cpc	r25, r1
     ec4:	59 f0       	breq	.+22     	; 0xedc <Note_Tick+0x1e>
     ec6:	1c f4       	brge	.+6      	; 0xece <Note_Tick+0x10>
     ec8:	00 97       	sbiw	r24, 0x00	; 0
     eca:	f1 f0       	breq	.+60     	; 0xf08 <Note_Tick+0x4a>
     ecc:	12 c0       	rjmp	.+36     	; 0xef2 <Note_Tick+0x34>
     ece:	82 30       	cpi	r24, 0x02	; 2
     ed0:	91 05       	cpc	r25, r1
     ed2:	51 f0       	breq	.+20     	; 0xee8 <Note_Tick+0x2a>
     ed4:	83 30       	cpi	r24, 0x03	; 3
     ed6:	91 05       	cpc	r25, r1
     ed8:	b9 f0       	breq	.+46     	; 0xf08 <Note_Tick+0x4a>
     eda:	0b c0       	rjmp	.+22     	; 0xef2 <Note_Tick+0x34>
        case Note_INIT:
            state = Note_Wait;
            break;
        case Note_Wait:
            if(playing){
     edc:	80 91 b8 05 	lds	r24, 0x05B8	; 0x8005b8 <playing>
     ee0:	88 23       	and	r24, r24
     ee2:	91 f0       	breq	.+36     	; 0xf08 <Note_Tick+0x4a>
                PWM_on();
     ee4:	dc df       	rcall	.-72     	; 0xe9e <PWM_on>
                state = Note_Play_Song;
                break;
     ee6:	1b c0       	rjmp	.+54     	; 0xf1e <Note_Tick+0x60>
            else{
                state = Note_Wait;
                break;
            }
        case Note_Play_Song:
            if(song_finished){
     ee8:	80 91 ba 05 	lds	r24, 0x05BA	; 0x8005ba <song_finished>
     eec:	81 11       	cpse	r24, r1
     eee:	a3 c0       	rjmp	.+326    	; 0x1036 <Note_Tick+0x178>
     ef0:	16 c0       	rjmp	.+44     	; 0xf1e <Note_Tick+0x60>
            }
        case Note_Reset:
            state = Note_Wait;
            break;
    }
    switch(state){
     ef2:	82 30       	cpi	r24, 0x02	; 2
     ef4:	91 05       	cpc	r25, r1
     ef6:	99 f0       	breq	.+38     	; 0xf1e <Note_Tick+0x60>
     ef8:	83 30       	cpi	r24, 0x03	; 3
     efa:	91 05       	cpc	r25, r1
     efc:	09 f4       	brne	.+2      	; 0xf00 <Note_Tick+0x42>
     efe:	9b c0       	rjmp	.+310    	; 0x1036 <Note_Tick+0x178>
     f00:	81 30       	cpi	r24, 0x01	; 1
     f02:	91 05       	cpc	r25, r1
     f04:	09 f0       	breq	.+2      	; 0xf08 <Note_Tick+0x4a>
     f06:	9e c0       	rjmp	.+316    	; 0x1044 <Note_Tick+0x186>
        case Note_INIT:
            break;
        case Note_Wait:
            play_note = 0;
     f08:	10 92 b0 05 	sts	0x05B0, r1	; 0x8005b0 <play_note.2319>
            rest_note = 0;
     f0c:	10 92 af 05 	sts	0x05AF, r1	; 0x8005af <rest_note.2320>
            current_score = 0;
     f10:	10 92 c4 05 	sts	0x05C4, r1	; 0x8005c4 <current_score+0x1>
     f14:	10 92 c3 05 	sts	0x05C3, r1	; 0x8005c3 <current_score>
            break;
     f18:	81 e0       	ldi	r24, 0x01	; 1
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	93 c0       	rjmp	.+294    	; 0x1044 <Note_Tick+0x186>
        case Note_Play_Song:
            if(play_note < songs[current_song_choice].timing[current_note]){
     f1e:	80 91 c6 05 	lds	r24, 0x05C6	; 0x8005c6 <current_song_choice>
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	40 91 c7 05 	lds	r20, 0x05C7	; 0x8005c7 <current_note>
     f28:	64 2f       	mov	r22, r20
     f2a:	70 e0       	ldi	r23, 0x00	; 0
     f2c:	2c e1       	ldi	r18, 0x1C	; 28
     f2e:	34 e0       	ldi	r19, 0x04	; 4
     f30:	82 9f       	mul	r24, r18
     f32:	f0 01       	movw	r30, r0
     f34:	83 9f       	mul	r24, r19
     f36:	f0 0d       	add	r31, r0
     f38:	92 9f       	mul	r25, r18
     f3a:	f0 0d       	add	r31, r0
     f3c:	11 24       	eor	r1, r1
     f3e:	e6 0f       	add	r30, r22
     f40:	f7 1f       	adc	r31, r23
     f42:	e7 57       	subi	r30, 0x77	; 119
     f44:	f7 4f       	sbci	r31, 0xF7	; 247
     f46:	30 81       	ld	r19, Z
     f48:	20 91 b0 05 	lds	r18, 0x05B0	; 0x8005b0 <play_note.2319>
     f4c:	23 17       	cp	r18, r19
     f4e:	08 f0       	brcs	.+2      	; 0xf52 <Note_Tick+0x94>
     f50:	41 c0       	rjmp	.+130    	; 0xfd4 <Note_Tick+0x116>
                note_to_hit = songs[current_song_choice].hit[current_note];
     f52:	2c e1       	ldi	r18, 0x1C	; 28
     f54:	34 e0       	ldi	r19, 0x04	; 4
     f56:	82 9f       	mul	r24, r18
     f58:	f0 01       	movw	r30, r0
     f5a:	83 9f       	mul	r24, r19
     f5c:	f0 0d       	add	r31, r0
     f5e:	92 9f       	mul	r25, r18
     f60:	f0 0d       	add	r31, r0
     f62:	11 24       	eor	r1, r1
     f64:	e6 0f       	add	r30, r22
     f66:	f7 1f       	adc	r31, r23
     f68:	eb 54       	subi	r30, 0x4B	; 75
     f6a:	f6 4f       	sbci	r31, 0xF6	; 246
     f6c:	c0 81       	ld	r28, Z
     f6e:	c0 93 ae 05 	sts	0x05AE, r28	; 0x8005ae <__data_end>
                set_PWM(songs[current_song_choice].notes[current_note]);
     f72:	27 e0       	ldi	r18, 0x07	; 7
     f74:	31 e0       	ldi	r19, 0x01	; 1
     f76:	82 9f       	mul	r24, r18
     f78:	f0 01       	movw	r30, r0
     f7a:	83 9f       	mul	r24, r19
     f7c:	f0 0d       	add	r31, r0
     f7e:	92 9f       	mul	r25, r18
     f80:	f0 0d       	add	r31, r0
     f82:	11 24       	eor	r1, r1
     f84:	e6 0f       	add	r30, r22
     f86:	f7 1f       	adc	r31, r23
     f88:	ee 0f       	add	r30, r30
     f8a:	ff 1f       	adc	r31, r31
     f8c:	ee 0f       	add	r30, r30
     f8e:	ff 1f       	adc	r31, r31
     f90:	ef 5c       	subi	r30, 0xCF	; 207
     f92:	f9 4f       	sbci	r31, 0xF9	; 249
     f94:	60 81       	ld	r22, Z
     f96:	71 81       	ldd	r23, Z+1	; 0x01
     f98:	82 81       	ldd	r24, Z+2	; 0x02
     f9a:	93 81       	ldd	r25, Z+3	; 0x03
     f9c:	15 df       	rcall	.-470    	; 0xdc8 <set_PWM>
                
                if(player_button_press == note_to_hit){
     f9e:	80 91 c5 05 	lds	r24, 0x05C5	; 0x8005c5 <player_button_press>
     fa2:	c8 13       	cpse	r28, r24
     fa4:	0d c0       	rjmp	.+26     	; 0xfc0 <Note_Tick+0x102>
                    current_score++;
     fa6:	80 91 c3 05 	lds	r24, 0x05C3	; 0x8005c3 <current_score>
     faa:	90 91 c4 05 	lds	r25, 0x05C4	; 0x8005c4 <current_score+0x1>
     fae:	01 96       	adiw	r24, 0x01	; 1
     fb0:	90 93 c4 05 	sts	0x05C4, r25	; 0x8005c4 <current_score+0x1>
     fb4:	80 93 c3 05 	sts	0x05C3, r24	; 0x8005c3 <current_score>
                    score_increase = true;
     fb8:	81 e0       	ldi	r24, 0x01	; 1
     fba:	80 93 b9 05 	sts	0x05B9, r24	; 0x8005b9 <score_increase>
     fbe:	02 c0       	rjmp	.+4      	; 0xfc4 <Note_Tick+0x106>
                }
                else{
                    score_increase = false;
     fc0:	10 92 b9 05 	sts	0x05B9, r1	; 0x8005b9 <score_increase>
                }
                play_note++;
     fc4:	80 91 b0 05 	lds	r24, 0x05B0	; 0x8005b0 <play_note.2319>
     fc8:	8f 5f       	subi	r24, 0xFF	; 255
     fca:	80 93 b0 05 	sts	0x05B0, r24	; 0x8005b0 <play_note.2319>
                break;
     fce:	82 e0       	ldi	r24, 0x02	; 2
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	38 c0       	rjmp	.+112    	; 0x1044 <Note_Tick+0x186>
            }
            else{
                if(rest_note < songs[current_song_choice].rest_timing[current_note]){
     fd4:	c0 91 af 05 	lds	r28, 0x05AF	; 0x8005af <rest_note.2320>
     fd8:	ec e1       	ldi	r30, 0x1C	; 28
     fda:	f4 e0       	ldi	r31, 0x04	; 4
     fdc:	8e 9f       	mul	r24, r30
     fde:	90 01       	movw	r18, r0
     fe0:	8f 9f       	mul	r24, r31
     fe2:	30 0d       	add	r19, r0
     fe4:	9e 9f       	mul	r25, r30
     fe6:	30 0d       	add	r19, r0
     fe8:	11 24       	eor	r1, r1
     fea:	fb 01       	movw	r30, r22
     fec:	e2 0f       	add	r30, r18
     fee:	f3 1f       	adc	r31, r19
     ff0:	e1 5e       	subi	r30, 0xE1	; 225
     ff2:	f6 4f       	sbci	r31, 0xF6	; 246
     ff4:	80 81       	ld	r24, Z
     ff6:	c8 17       	cp	r28, r24
     ff8:	50 f4       	brcc	.+20     	; 0x100e <Note_Tick+0x150>
                    set_PWM(0);
     ffa:	60 e0       	ldi	r22, 0x00	; 0
     ffc:	70 e0       	ldi	r23, 0x00	; 0
     ffe:	cb 01       	movw	r24, r22
    1000:	e3 de       	rcall	.-570    	; 0xdc8 <set_PWM>
                    rest_note++;
    1002:	cf 5f       	subi	r28, 0xFF	; 255
    1004:	c0 93 af 05 	sts	0x05AF, r28	; 0x8005af <rest_note.2320>
    1008:	82 e0       	ldi	r24, 0x02	; 2
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	1b c0       	rjmp	.+54     	; 0x1044 <Note_Tick+0x186>
                }
                else{
                    play_note = 0;
    100e:	10 92 b0 05 	sts	0x05B0, r1	; 0x8005b0 <play_note.2319>
                    rest_note = 0;
    1012:	10 92 af 05 	sts	0x05AF, r1	; 0x8005af <rest_note.2320>
                    if(current_note < SONG_LENGTH){
    1016:	46 39       	cpi	r20, 0x96	; 150
    1018:	30 f4       	brcc	.+12     	; 0x1026 <Note_Tick+0x168>
                        current_note++;
    101a:	4f 5f       	subi	r20, 0xFF	; 255
    101c:	40 93 c7 05 	sts	0x05C7, r20	; 0x8005c7 <current_note>
    1020:	82 e0       	ldi	r24, 0x02	; 2
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	0f c0       	rjmp	.+30     	; 0x1044 <Note_Tick+0x186>
                    }
                    else{
                        playing = false;
    1026:	10 92 b8 05 	sts	0x05B8, r1	; 0x8005b8 <playing>
                        song_finished = true;
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	80 93 ba 05 	sts	0x05BA, r24	; 0x8005ba <song_finished>
                        break;
    1030:	82 e0       	ldi	r24, 0x02	; 2
    1032:	90 e0       	ldi	r25, 0x00	; 0
                    }
                }
            }
            break;
        case Note_Reset:
            PWM_off();
    1034:	07 c0       	rjmp	.+14     	; 0x1044 <Note_Tick+0x186>
    1036:	3e df       	rcall	.-388    	; 0xeb4 <PWM_off>
            current_note = 0;
    1038:	10 92 c7 05 	sts	0x05C7, r1	; 0x8005c7 <current_note>
            score_increase = false;
    103c:	10 92 b9 05 	sts	0x05B9, r1	; 0x8005b9 <score_increase>
            break;
    1040:	83 e0       	ldi	r24, 0x03	; 3
    1042:	90 e0       	ldi	r25, 0x00	; 0
    }
    return state;
}
    1044:	cf 91       	pop	r28
    1046:	08 95       	ret

00001048 <main>:


int main(void)
{
    //LCD PORTS & RGB MATRIX
    DDRD = 0xFF; PORTD = 0x00;
    1048:	8f ef       	ldi	r24, 0xFF	; 255
    104a:	8a b9       	out	0x0a, r24	; 10
    104c:	1b b8       	out	0x0b, r1	; 11
    DDRC = 0XFF; PORTC = 0x00; //0 & 1 are LCD Control Lines, 2,3,4 are RGB PORTS
    104e:	87 b9       	out	0x07, r24	; 7
    1050:	18 b8       	out	0x08, r1	; 8
    
    //BUTTON INPUT PORTS
    DDRA = 0x00; PORTA = 0xFF;
    1052:	11 b8       	out	0x01, r1	; 1
    1054:	82 b9       	out	0x02, r24	; 2
    
    //BUZZER PORT
    DDRB = 0x0FF; PORTB = 0x00; //PB6 is buzzer
    1056:	84 b9       	out	0x04, r24	; 4
    1058:	15 b8       	out	0x05, r1	; 5
    
    //Initialize LCD and Matrix
    LCD_init();
    105a:	57 d9       	rcall	.-3410   	; 0x30a <LCD_init>
    
    Shift_Init();   
    105c:	7c dd       	rcall	.-1288   	; 0xb56 <Shift_Init>
    Shift_transmit_data(0);
    105e:	80 e0       	ldi	r24, 0x00	; 0
    1060:	8f dd       	rcall	.-1250   	; 0xb80 <Shift_transmit_data>
    Shift_transmit_data(255);
    1062:	8f ef       	ldi	r24, 0xFF	; 255
    1064:	8d dd       	rcall	.-1254   	; 0xb80 <Shift_transmit_data>
    1066:	0f 2e       	mov	r0, r31
    1068:	fa ec       	ldi	r31, 0xCA	; 202
    106a:	cf 2e       	mov	r12, r31
    106c:	f2 e0       	ldi	r31, 0x02	; 2
    106e:	df 2e       	mov	r13, r31
    1070:	f0 2d       	mov	r31, r0
    1072:	0f 2e       	mov	r0, r31
    1074:	f1 e3       	ldi	r31, 0x31	; 49
    1076:	2f 2e       	mov	r2, r31
    1078:	f6 e0       	ldi	r31, 0x06	; 6
    107a:	3f 2e       	mov	r3, r31
    107c:	f0 2d       	mov	r31, r0
    107e:	0f 2e       	mov	r0, r31
    1080:	f4 e3       	ldi	r31, 0x34	; 52
    1082:	4f 2e       	mov	r4, r31
    1084:	f2 e0       	ldi	r31, 0x02	; 2
    1086:	5f 2e       	mov	r5, r31
    1088:	f0 2d       	mov	r31, r0
    108a:	0f 2e       	mov	r0, r31
    108c:	f9 e8       	ldi	r31, 0x89	; 137
    108e:	6f 2e       	mov	r6, r31
    1090:	f8 e0       	ldi	r31, 0x08	; 8
    1092:	7f 2e       	mov	r7, r31
    1094:	f0 2d       	mov	r31, r0
    1096:	0e e9       	ldi	r16, 0x9E	; 158
    1098:	11 e0       	ldi	r17, 0x01	; 1
    109a:	cf e1       	ldi	r28, 0x1F	; 31
    109c:	d9 e0       	ldi	r29, 0x09	; 9
    109e:	0f 2e       	mov	r0, r31
    10a0:	f8 e0       	ldi	r31, 0x08	; 8
    10a2:	8f 2e       	mov	r8, r31
    10a4:	f1 e0       	ldi	r31, 0x01	; 1
    10a6:	9f 2e       	mov	r9, r31
    10a8:	f0 2d       	mov	r31, r0
    10aa:	0f 2e       	mov	r0, r31
    10ac:	f5 eb       	ldi	r31, 0xB5	; 181
    10ae:	af 2e       	mov	r10, r31
    10b0:	f9 e0       	ldi	r31, 0x09	; 9
    10b2:	bf 2e       	mov	r11, r31
    10b4:	f0 2d       	mov	r31, r0
    10b6:	f1 2c       	mov	r15, r1
        songs[0].hit[j] = pressDIV[j];
        songs[0].high_score = eeprom_read_byte((uint8_t*) 1);
    }
    */
    
    for(unsigned char j = 0; j < 7; j++) {
    10b8:	f6 01       	movw	r30, r12
        songs[0].notes[j] = notes_zense[j];
    10ba:	81 91       	ld	r24, Z+
    10bc:	91 91       	ld	r25, Z+
    10be:	a1 91       	ld	r26, Z+
    10c0:	b1 91       	ld	r27, Z+
    10c2:	6f 01       	movw	r12, r30
    10c4:	f1 01       	movw	r30, r2
    10c6:	81 93       	st	Z+, r24
    10c8:	91 93       	st	Z+, r25
    10ca:	a1 93       	st	Z+, r26
    10cc:	b1 93       	st	Z+, r27
    10ce:	1f 01       	movw	r2, r30
    10d0:	f2 01       	movw	r30, r4
        songs[0].timing[j] = timing_zense[j];
    10d2:	81 91       	ld	r24, Z+
    10d4:	2f 01       	movw	r4, r30
    10d6:	f3 01       	movw	r30, r6
    10d8:	81 93       	st	Z+, r24
    10da:	3f 01       	movw	r6, r30
    10dc:	f8 01       	movw	r30, r16
        songs[0].rest_timing[j] = rests_zense[j];
    10de:	81 91       	ld	r24, Z+
    10e0:	8f 01       	movw	r16, r30
    10e2:	89 93       	st	Y+, r24
    10e4:	f4 01       	movw	r30, r8
        songs[0].hit[j] = hit_zense[j];
    10e6:	81 91       	ld	r24, Z+
    10e8:	4f 01       	movw	r8, r30
    10ea:	f5 01       	movw	r30, r10
    10ec:	81 93       	st	Z+, r24
    10ee:	5f 01       	movw	r10, r30
        songs[0].high_score = eeprom_read_byte((uint8_t*) 1);
    10f0:	81 e0       	ldi	r24, 0x01	; 1
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	41 d2       	rcall	.+1154   	; 0x1578 <eeprom_read_byte>
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	eb e4       	ldi	r30, 0x4B	; 75
    10fa:	fa e0       	ldi	r31, 0x0A	; 10
    10fc:	91 83       	std	Z+1, r25	; 0x01
    10fe:	80 83       	st	Z, r24
    1100:	f3 94       	inc	r15
        songs[0].hit[j] = pressDIV[j];
        songs[0].high_score = eeprom_read_byte((uint8_t*) 1);
    }
    */
    
    for(unsigned char j = 0; j < 7; j++) {
    1102:	f7 e0       	ldi	r31, 0x07	; 7
    1104:	ff 12       	cpse	r15, r31
    1106:	d8 cf       	rjmp	.-80     	; 0x10b8 <main+0x70>
    1108:	e1 ed       	ldi	r30, 0xD1	; 209
    }
    
    //Task Code
    unsigned char tasks_increment = 0;
    
    tasks[tasks_increment].state = LFT_INIT;
    110a:	f5 e0       	ldi	r31, 0x05	; 5
    110c:	11 82       	std	Z+1, r1	; 0x01
    110e:	10 82       	st	Z, r1
    1110:	82 e3       	ldi	r24, 0x32	; 50
    tasks[tasks_increment].period = 50;
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	a0 e0       	ldi	r26, 0x00	; 0
    1116:	b0 e0       	ldi	r27, 0x00	; 0
    1118:	82 83       	std	Z+2, r24	; 0x02
    111a:	93 83       	std	Z+3, r25	; 0x03
    111c:	a4 83       	std	Z+4, r26	; 0x04
    111e:	b5 83       	std	Z+5, r27	; 0x05
    1120:	86 83       	std	Z+6, r24	; 0x06
    tasks[tasks_increment].elapsedTime = tasks[tasks_increment].period;
    1122:	97 83       	std	Z+7, r25	; 0x07
    1124:	a0 87       	std	Z+8, r26	; 0x08
    1126:	b1 87       	std	Z+9, r27	; 0x09
    1128:	20 e7       	ldi	r18, 0x70	; 112
    tasks[tasks_increment].TickFct = &Left_Tick;
    112a:	30 e0       	ldi	r19, 0x00	; 0
    112c:	33 87       	std	Z+11, r19	; 0x0b
    112e:	22 87       	std	Z+10, r18	; 0x0a
    1130:	15 86       	std	Z+13, r1	; 0x0d
    
    tasks_increment++;
    
    tasks[tasks_increment].state = RGHT_INIT;
    1132:	14 86       	std	Z+12, r1	; 0x0c
    1134:	86 87       	std	Z+14, r24	; 0x0e
    tasks[tasks_increment].period = 50;
    1136:	97 87       	std	Z+15, r25	; 0x0f
    1138:	a0 8b       	std	Z+16, r26	; 0x10
    113a:	b1 8b       	std	Z+17, r27	; 0x11
    113c:	82 8b       	std	Z+18, r24	; 0x12
    tasks[tasks_increment].elapsedTime = tasks[tasks_increment].period;
    113e:	93 8b       	std	Z+19, r25	; 0x13
    1140:	a4 8b       	std	Z+20, r26	; 0x14
    1142:	b5 8b       	std	Z+21, r27	; 0x15
    1144:	23 e8       	ldi	r18, 0x83	; 131
    tasks[tasks_increment].TickFct = &Right_Tick;
    1146:	30 e0       	ldi	r19, 0x00	; 0
    1148:	37 8b       	std	Z+23, r19	; 0x17
    114a:	26 8b       	std	Z+22, r18	; 0x16
    114c:	11 8e       	std	Z+25, r1	; 0x19
    
    tasks_increment++;
    
    tasks[tasks_increment].state = UP_INIT;
    114e:	10 8e       	std	Z+24, r1	; 0x18
    1150:	82 8f       	std	Z+26, r24	; 0x1a
    tasks[tasks_increment].period = 50;
    1152:	93 8f       	std	Z+27, r25	; 0x1b
    1154:	a4 8f       	std	Z+28, r26	; 0x1c
    1156:	b5 8f       	std	Z+29, r27	; 0x1d
    1158:	86 8f       	std	Z+30, r24	; 0x1e
    tasks[tasks_increment].elapsedTime = tasks[tasks_increment].period;
    115a:	97 8f       	std	Z+31, r25	; 0x1f
    115c:	a0 a3       	std	Z+32, r26	; 0x20
    115e:	b1 a3       	std	Z+33, r27	; 0x21
    1160:	26 e9       	ldi	r18, 0x96	; 150
    tasks[tasks_increment].TickFct = &Up_Tick;
    1162:	30 e0       	ldi	r19, 0x00	; 0
    1164:	33 a3       	std	Z+35, r19	; 0x23
    1166:	22 a3       	std	Z+34, r18	; 0x22
    1168:	15 a2       	std	Z+37, r1	; 0x25
    
    
    tasks_increment++;
    
    tasks[tasks_increment].state = DOWN_INIT;
    116a:	14 a2       	std	Z+36, r1	; 0x24
    116c:	86 a3       	std	Z+38, r24	; 0x26
    tasks[tasks_increment].period = 50;
    116e:	97 a3       	std	Z+39, r25	; 0x27
    1170:	a0 a7       	std	Z+40, r26	; 0x28
    1172:	b1 a7       	std	Z+41, r27	; 0x29
    1174:	82 a7       	std	Z+42, r24	; 0x2a
    tasks[tasks_increment].elapsedTime = tasks[tasks_increment].period;
    1176:	93 a7       	std	Z+43, r25	; 0x2b
    1178:	a4 a7       	std	Z+44, r26	; 0x2c
    117a:	b5 a7       	std	Z+45, r27	; 0x2d
    117c:	89 ea       	ldi	r24, 0xA9	; 169
    tasks[tasks_increment].TickFct = &Down_Tick;
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	97 a7       	std	Z+47, r25	; 0x2f
    1182:	86 a7       	std	Z+46, r24	; 0x2e
    1184:	11 aa       	std	Z+49, r1	; 0x31
    
    
    tasks_increment++;
    
    tasks[tasks_increment].state = RGB_INIT;
    1186:	10 aa       	std	Z+48, r1	; 0x30
    1188:	8a e0       	ldi	r24, 0x0A	; 10
    tasks[tasks_increment].period = 10;
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	a0 e0       	ldi	r26, 0x00	; 0
    118e:	b0 e0       	ldi	r27, 0x00	; 0
    1190:	82 ab       	std	Z+50, r24	; 0x32
    1192:	93 ab       	std	Z+51, r25	; 0x33
    1194:	a4 ab       	std	Z+52, r26	; 0x34
    1196:	b5 ab       	std	Z+53, r27	; 0x35
    1198:	86 ab       	std	Z+54, r24	; 0x36
    tasks[tasks_increment].elapsedTime = tasks[tasks_increment].period;
    119a:	97 ab       	std	Z+55, r25	; 0x37
    119c:	a0 af       	std	Z+56, r26	; 0x38
    119e:	b1 af       	std	Z+57, r27	; 0x39
    11a0:	21 ed       	ldi	r18, 0xD1	; 209
    tasks[tasks_increment].TickFct = &RGB_Matrix_Tick;
    11a2:	35 e0       	ldi	r19, 0x05	; 5
    11a4:	33 af       	std	Z+59, r19	; 0x3b
    11a6:	22 af       	std	Z+58, r18	; 0x3a
    11a8:	15 ae       	std	Z+61, r1	; 0x3d
    
    
    tasks_increment++;
    
    tasks[tasks_increment].state = LCD_Menu_Init;
    11aa:	14 ae       	std	Z+60, r1	; 0x3c
    11ac:	4e e1       	ldi	r20, 0x1E	; 30
    tasks[tasks_increment].period = 30;
    11ae:	50 e0       	ldi	r21, 0x00	; 0
    11b0:	60 e0       	ldi	r22, 0x00	; 0
    11b2:	70 e0       	ldi	r23, 0x00	; 0
    11b4:	40 93 0f 06 	sts	0x060F, r20	; 0x80060f <tasks+0x3e>
    11b8:	50 93 10 06 	sts	0x0610, r21	; 0x800610 <tasks+0x3f>
    11bc:	60 93 11 06 	sts	0x0611, r22	; 0x800611 <tasks+0x40>
    11c0:	70 93 12 06 	sts	0x0612, r23	; 0x800612 <tasks+0x41>
    11c4:	40 93 13 06 	sts	0x0613, r20	; 0x800613 <tasks+0x42>
    tasks[tasks_increment].elapsedTime = tasks[tasks_increment].period;
    11c8:	50 93 14 06 	sts	0x0614, r21	; 0x800614 <tasks+0x43>
    11cc:	60 93 15 06 	sts	0x0615, r22	; 0x800615 <tasks+0x44>
    11d0:	70 93 16 06 	sts	0x0616, r23	; 0x800616 <tasks+0x45>
    11d4:	2b ec       	ldi	r18, 0xCB	; 203
    tasks[tasks_increment].TickFct = &LCD_Menu_Tick;
    11d6:	31 e0       	ldi	r19, 0x01	; 1
    11d8:	30 93 18 06 	sts	0x0618, r19	; 0x800618 <tasks+0x47>
    11dc:	20 93 17 06 	sts	0x0617, r18	; 0x800617 <tasks+0x46>
    11e0:	10 92 1a 06 	sts	0x061A, r1	; 0x80061a <tasks+0x49>
    
    tasks_increment++;
    
    tasks[tasks_increment].state = Note_INIT;
    11e4:	10 92 19 06 	sts	0x0619, r1	; 0x800619 <tasks+0x48>
    11e8:	80 93 1b 06 	sts	0x061B, r24	; 0x80061b <tasks+0x4a>
    tasks[tasks_increment].period = 10;
    11ec:	90 93 1c 06 	sts	0x061C, r25	; 0x80061c <tasks+0x4b>
    11f0:	a0 93 1d 06 	sts	0x061D, r26	; 0x80061d <tasks+0x4c>
    11f4:	b0 93 1e 06 	sts	0x061E, r27	; 0x80061e <tasks+0x4d>
    11f8:	80 93 1f 06 	sts	0x061F, r24	; 0x80061f <tasks+0x4e>
    tasks[tasks_increment].elapsedTime = tasks[tasks_increment].period;
    11fc:	90 93 20 06 	sts	0x0620, r25	; 0x800620 <tasks+0x4f>
    1200:	a0 93 21 06 	sts	0x0621, r26	; 0x800621 <tasks+0x50>
    1204:	b0 93 22 06 	sts	0x0622, r27	; 0x800622 <tasks+0x51>
    1208:	2f e5       	ldi	r18, 0x5F	; 95
    tasks[tasks_increment].TickFct = &Note_Tick;
    120a:	37 e0       	ldi	r19, 0x07	; 7
    120c:	30 93 24 06 	sts	0x0624, r19	; 0x800624 <tasks+0x53>
    1210:	20 93 23 06 	sts	0x0623, r18	; 0x800623 <tasks+0x52>
    1214:	10 92 26 06 	sts	0x0626, r1	; 0x800626 <tasks+0x55>
    
    tasks_increment++;
    
    tasks[tasks_increment].state = Player_Init;
    1218:	10 92 25 06 	sts	0x0625, r1	; 0x800625 <tasks+0x54>
    121c:	80 93 27 06 	sts	0x0627, r24	; 0x800627 <tasks+0x56>
    tasks[tasks_increment].period = 10;
    1220:	90 93 28 06 	sts	0x0628, r25	; 0x800628 <tasks+0x57>
    1224:	a0 93 29 06 	sts	0x0629, r26	; 0x800629 <tasks+0x58>
    1228:	b0 93 2a 06 	sts	0x062A, r27	; 0x80062a <tasks+0x59>
    122c:	80 93 2b 06 	sts	0x062B, r24	; 0x80062b <tasks+0x5a>
    tasks[tasks_increment].elapsedTime = tasks[tasks_increment].period;
    1230:	90 93 2c 06 	sts	0x062C, r25	; 0x80062c <tasks+0x5b>
    1234:	a0 93 2d 06 	sts	0x062D, r26	; 0x80062d <tasks+0x5c>
    1238:	b0 93 2e 06 	sts	0x062E, r27	; 0x80062e <tasks+0x5d>
    123c:	8c eb       	ldi	r24, 0xBC	; 188
    tasks[tasks_increment].TickFct = &Player_Tick;
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	90 93 30 06 	sts	0x0630, r25	; 0x800630 <tasks+0x5f>
    1244:	80 93 2f 06 	sts	0x062F, r24	; 0x80062f <tasks+0x5e>
    
    //Timer
    TimerSet(tasksPeriodGCD);
    1248:	65 e0       	ldi	r22, 0x05	; 5
    124a:	70 e0       	ldi	r23, 0x00	; 0
    124c:	80 e0       	ldi	r24, 0x00	; 0
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	be db       	rcall	.-2180   	; 0x9ce <TimerSet>
    TimerOn();
    1252:	ce db       	rcall	.-2148   	; 0x9f0 <TimerOn>
    1254:	ff cf       	rjmp	.-2      	; 0x1254 <main+0x20c>

00001256 <__cmpsf2>:
    1256:	9c d0       	rcall	.+312    	; 0x1390 <__fp_cmp>
    1258:	08 f4       	brcc	.+2      	; 0x125c <__cmpsf2+0x6>
    125a:	81 e0       	ldi	r24, 0x01	; 1
    125c:	08 95       	ret

0000125e <__divsf3>:
    125e:	0c d0       	rcall	.+24     	; 0x1278 <__divsf3x>
    1260:	d2 c0       	rjmp	.+420    	; 0x1406 <__fp_round>
    1262:	ca d0       	rcall	.+404    	; 0x13f8 <__fp_pscB>
    1264:	40 f0       	brcs	.+16     	; 0x1276 <__divsf3+0x18>
    1266:	c1 d0       	rcall	.+386    	; 0x13ea <__fp_pscA>
    1268:	30 f0       	brcs	.+12     	; 0x1276 <__divsf3+0x18>
    126a:	21 f4       	brne	.+8      	; 0x1274 <__divsf3+0x16>
    126c:	5f 3f       	cpi	r21, 0xFF	; 255
    126e:	19 f0       	breq	.+6      	; 0x1276 <__divsf3+0x18>
    1270:	b3 c0       	rjmp	.+358    	; 0x13d8 <__fp_inf>
    1272:	51 11       	cpse	r21, r1
    1274:	fc c0       	rjmp	.+504    	; 0x146e <__fp_szero>
    1276:	b6 c0       	rjmp	.+364    	; 0x13e4 <__fp_nan>

00001278 <__divsf3x>:
    1278:	d7 d0       	rcall	.+430    	; 0x1428 <__fp_split3>
    127a:	98 f3       	brcs	.-26     	; 0x1262 <__divsf3+0x4>

0000127c <__divsf3_pse>:
    127c:	99 23       	and	r25, r25
    127e:	c9 f3       	breq	.-14     	; 0x1272 <__divsf3+0x14>
    1280:	55 23       	and	r21, r21
    1282:	b1 f3       	breq	.-20     	; 0x1270 <__divsf3+0x12>
    1284:	95 1b       	sub	r25, r21
    1286:	55 0b       	sbc	r21, r21
    1288:	bb 27       	eor	r27, r27
    128a:	aa 27       	eor	r26, r26
    128c:	62 17       	cp	r22, r18
    128e:	73 07       	cpc	r23, r19
    1290:	84 07       	cpc	r24, r20
    1292:	38 f0       	brcs	.+14     	; 0x12a2 <__divsf3_pse+0x26>
    1294:	9f 5f       	subi	r25, 0xFF	; 255
    1296:	5f 4f       	sbci	r21, 0xFF	; 255
    1298:	22 0f       	add	r18, r18
    129a:	33 1f       	adc	r19, r19
    129c:	44 1f       	adc	r20, r20
    129e:	aa 1f       	adc	r26, r26
    12a0:	a9 f3       	breq	.-22     	; 0x128c <__divsf3_pse+0x10>
    12a2:	33 d0       	rcall	.+102    	; 0x130a <__divsf3_pse+0x8e>
    12a4:	0e 2e       	mov	r0, r30
    12a6:	3a f0       	brmi	.+14     	; 0x12b6 <__divsf3_pse+0x3a>
    12a8:	e0 e8       	ldi	r30, 0x80	; 128
    12aa:	30 d0       	rcall	.+96     	; 0x130c <__divsf3_pse+0x90>
    12ac:	91 50       	subi	r25, 0x01	; 1
    12ae:	50 40       	sbci	r21, 0x00	; 0
    12b0:	e6 95       	lsr	r30
    12b2:	00 1c       	adc	r0, r0
    12b4:	ca f7       	brpl	.-14     	; 0x12a8 <__divsf3_pse+0x2c>
    12b6:	29 d0       	rcall	.+82     	; 0x130a <__divsf3_pse+0x8e>
    12b8:	fe 2f       	mov	r31, r30
    12ba:	27 d0       	rcall	.+78     	; 0x130a <__divsf3_pse+0x8e>
    12bc:	66 0f       	add	r22, r22
    12be:	77 1f       	adc	r23, r23
    12c0:	88 1f       	adc	r24, r24
    12c2:	bb 1f       	adc	r27, r27
    12c4:	26 17       	cp	r18, r22
    12c6:	37 07       	cpc	r19, r23
    12c8:	48 07       	cpc	r20, r24
    12ca:	ab 07       	cpc	r26, r27
    12cc:	b0 e8       	ldi	r27, 0x80	; 128
    12ce:	09 f0       	breq	.+2      	; 0x12d2 <__divsf3_pse+0x56>
    12d0:	bb 0b       	sbc	r27, r27
    12d2:	80 2d       	mov	r24, r0
    12d4:	bf 01       	movw	r22, r30
    12d6:	ff 27       	eor	r31, r31
    12d8:	93 58       	subi	r25, 0x83	; 131
    12da:	5f 4f       	sbci	r21, 0xFF	; 255
    12dc:	2a f0       	brmi	.+10     	; 0x12e8 <__divsf3_pse+0x6c>
    12de:	9e 3f       	cpi	r25, 0xFE	; 254
    12e0:	51 05       	cpc	r21, r1
    12e2:	68 f0       	brcs	.+26     	; 0x12fe <__divsf3_pse+0x82>
    12e4:	79 c0       	rjmp	.+242    	; 0x13d8 <__fp_inf>
    12e6:	c3 c0       	rjmp	.+390    	; 0x146e <__fp_szero>
    12e8:	5f 3f       	cpi	r21, 0xFF	; 255
    12ea:	ec f3       	brlt	.-6      	; 0x12e6 <__divsf3_pse+0x6a>
    12ec:	98 3e       	cpi	r25, 0xE8	; 232
    12ee:	dc f3       	brlt	.-10     	; 0x12e6 <__divsf3_pse+0x6a>
    12f0:	86 95       	lsr	r24
    12f2:	77 95       	ror	r23
    12f4:	67 95       	ror	r22
    12f6:	b7 95       	ror	r27
    12f8:	f7 95       	ror	r31
    12fa:	9f 5f       	subi	r25, 0xFF	; 255
    12fc:	c9 f7       	brne	.-14     	; 0x12f0 <__divsf3_pse+0x74>
    12fe:	88 0f       	add	r24, r24
    1300:	91 1d       	adc	r25, r1
    1302:	96 95       	lsr	r25
    1304:	87 95       	ror	r24
    1306:	97 f9       	bld	r25, 7
    1308:	08 95       	ret
    130a:	e1 e0       	ldi	r30, 0x01	; 1
    130c:	66 0f       	add	r22, r22
    130e:	77 1f       	adc	r23, r23
    1310:	88 1f       	adc	r24, r24
    1312:	bb 1f       	adc	r27, r27
    1314:	62 17       	cp	r22, r18
    1316:	73 07       	cpc	r23, r19
    1318:	84 07       	cpc	r24, r20
    131a:	ba 07       	cpc	r27, r26
    131c:	20 f0       	brcs	.+8      	; 0x1326 <__divsf3_pse+0xaa>
    131e:	62 1b       	sub	r22, r18
    1320:	73 0b       	sbc	r23, r19
    1322:	84 0b       	sbc	r24, r20
    1324:	ba 0b       	sbc	r27, r26
    1326:	ee 1f       	adc	r30, r30
    1328:	88 f7       	brcc	.-30     	; 0x130c <__divsf3_pse+0x90>
    132a:	e0 95       	com	r30
    132c:	08 95       	ret

0000132e <__fixsfsi>:
    132e:	04 d0       	rcall	.+8      	; 0x1338 <__fixunssfsi>
    1330:	68 94       	set
    1332:	b1 11       	cpse	r27, r1
    1334:	9c c0       	rjmp	.+312    	; 0x146e <__fp_szero>
    1336:	08 95       	ret

00001338 <__fixunssfsi>:
    1338:	7f d0       	rcall	.+254    	; 0x1438 <__fp_splitA>
    133a:	88 f0       	brcs	.+34     	; 0x135e <__fixunssfsi+0x26>
    133c:	9f 57       	subi	r25, 0x7F	; 127
    133e:	90 f0       	brcs	.+36     	; 0x1364 <__fixunssfsi+0x2c>
    1340:	b9 2f       	mov	r27, r25
    1342:	99 27       	eor	r25, r25
    1344:	b7 51       	subi	r27, 0x17	; 23
    1346:	a0 f0       	brcs	.+40     	; 0x1370 <__fixunssfsi+0x38>
    1348:	d1 f0       	breq	.+52     	; 0x137e <__fixunssfsi+0x46>
    134a:	66 0f       	add	r22, r22
    134c:	77 1f       	adc	r23, r23
    134e:	88 1f       	adc	r24, r24
    1350:	99 1f       	adc	r25, r25
    1352:	1a f0       	brmi	.+6      	; 0x135a <__fixunssfsi+0x22>
    1354:	ba 95       	dec	r27
    1356:	c9 f7       	brne	.-14     	; 0x134a <__fixunssfsi+0x12>
    1358:	12 c0       	rjmp	.+36     	; 0x137e <__fixunssfsi+0x46>
    135a:	b1 30       	cpi	r27, 0x01	; 1
    135c:	81 f0       	breq	.+32     	; 0x137e <__fixunssfsi+0x46>
    135e:	86 d0       	rcall	.+268    	; 0x146c <__fp_zero>
    1360:	b1 e0       	ldi	r27, 0x01	; 1
    1362:	08 95       	ret
    1364:	83 c0       	rjmp	.+262    	; 0x146c <__fp_zero>
    1366:	67 2f       	mov	r22, r23
    1368:	78 2f       	mov	r23, r24
    136a:	88 27       	eor	r24, r24
    136c:	b8 5f       	subi	r27, 0xF8	; 248
    136e:	39 f0       	breq	.+14     	; 0x137e <__fixunssfsi+0x46>
    1370:	b9 3f       	cpi	r27, 0xF9	; 249
    1372:	cc f3       	brlt	.-14     	; 0x1366 <__fixunssfsi+0x2e>
    1374:	86 95       	lsr	r24
    1376:	77 95       	ror	r23
    1378:	67 95       	ror	r22
    137a:	b3 95       	inc	r27
    137c:	d9 f7       	brne	.-10     	; 0x1374 <__fixunssfsi+0x3c>
    137e:	3e f4       	brtc	.+14     	; 0x138e <__fixunssfsi+0x56>
    1380:	90 95       	com	r25
    1382:	80 95       	com	r24
    1384:	70 95       	com	r23
    1386:	61 95       	neg	r22
    1388:	7f 4f       	sbci	r23, 0xFF	; 255
    138a:	8f 4f       	sbci	r24, 0xFF	; 255
    138c:	9f 4f       	sbci	r25, 0xFF	; 255
    138e:	08 95       	ret

00001390 <__fp_cmp>:
    1390:	99 0f       	add	r25, r25
    1392:	00 08       	sbc	r0, r0
    1394:	55 0f       	add	r21, r21
    1396:	aa 0b       	sbc	r26, r26
    1398:	e0 e8       	ldi	r30, 0x80	; 128
    139a:	fe ef       	ldi	r31, 0xFE	; 254
    139c:	16 16       	cp	r1, r22
    139e:	17 06       	cpc	r1, r23
    13a0:	e8 07       	cpc	r30, r24
    13a2:	f9 07       	cpc	r31, r25
    13a4:	c0 f0       	brcs	.+48     	; 0x13d6 <__fp_cmp+0x46>
    13a6:	12 16       	cp	r1, r18
    13a8:	13 06       	cpc	r1, r19
    13aa:	e4 07       	cpc	r30, r20
    13ac:	f5 07       	cpc	r31, r21
    13ae:	98 f0       	brcs	.+38     	; 0x13d6 <__fp_cmp+0x46>
    13b0:	62 1b       	sub	r22, r18
    13b2:	73 0b       	sbc	r23, r19
    13b4:	84 0b       	sbc	r24, r20
    13b6:	95 0b       	sbc	r25, r21
    13b8:	39 f4       	brne	.+14     	; 0x13c8 <__fp_cmp+0x38>
    13ba:	0a 26       	eor	r0, r26
    13bc:	61 f0       	breq	.+24     	; 0x13d6 <__fp_cmp+0x46>
    13be:	23 2b       	or	r18, r19
    13c0:	24 2b       	or	r18, r20
    13c2:	25 2b       	or	r18, r21
    13c4:	21 f4       	brne	.+8      	; 0x13ce <__fp_cmp+0x3e>
    13c6:	08 95       	ret
    13c8:	0a 26       	eor	r0, r26
    13ca:	09 f4       	brne	.+2      	; 0x13ce <__fp_cmp+0x3e>
    13cc:	a1 40       	sbci	r26, 0x01	; 1
    13ce:	a6 95       	lsr	r26
    13d0:	8f ef       	ldi	r24, 0xFF	; 255
    13d2:	81 1d       	adc	r24, r1
    13d4:	81 1d       	adc	r24, r1
    13d6:	08 95       	ret

000013d8 <__fp_inf>:
    13d8:	97 f9       	bld	r25, 7
    13da:	9f 67       	ori	r25, 0x7F	; 127
    13dc:	80 e8       	ldi	r24, 0x80	; 128
    13de:	70 e0       	ldi	r23, 0x00	; 0
    13e0:	60 e0       	ldi	r22, 0x00	; 0
    13e2:	08 95       	ret

000013e4 <__fp_nan>:
    13e4:	9f ef       	ldi	r25, 0xFF	; 255
    13e6:	80 ec       	ldi	r24, 0xC0	; 192
    13e8:	08 95       	ret

000013ea <__fp_pscA>:
    13ea:	00 24       	eor	r0, r0
    13ec:	0a 94       	dec	r0
    13ee:	16 16       	cp	r1, r22
    13f0:	17 06       	cpc	r1, r23
    13f2:	18 06       	cpc	r1, r24
    13f4:	09 06       	cpc	r0, r25
    13f6:	08 95       	ret

000013f8 <__fp_pscB>:
    13f8:	00 24       	eor	r0, r0
    13fa:	0a 94       	dec	r0
    13fc:	12 16       	cp	r1, r18
    13fe:	13 06       	cpc	r1, r19
    1400:	14 06       	cpc	r1, r20
    1402:	05 06       	cpc	r0, r21
    1404:	08 95       	ret

00001406 <__fp_round>:
    1406:	09 2e       	mov	r0, r25
    1408:	03 94       	inc	r0
    140a:	00 0c       	add	r0, r0
    140c:	11 f4       	brne	.+4      	; 0x1412 <__fp_round+0xc>
    140e:	88 23       	and	r24, r24
    1410:	52 f0       	brmi	.+20     	; 0x1426 <__fp_round+0x20>
    1412:	bb 0f       	add	r27, r27
    1414:	40 f4       	brcc	.+16     	; 0x1426 <__fp_round+0x20>
    1416:	bf 2b       	or	r27, r31
    1418:	11 f4       	brne	.+4      	; 0x141e <__fp_round+0x18>
    141a:	60 ff       	sbrs	r22, 0
    141c:	04 c0       	rjmp	.+8      	; 0x1426 <__fp_round+0x20>
    141e:	6f 5f       	subi	r22, 0xFF	; 255
    1420:	7f 4f       	sbci	r23, 0xFF	; 255
    1422:	8f 4f       	sbci	r24, 0xFF	; 255
    1424:	9f 4f       	sbci	r25, 0xFF	; 255
    1426:	08 95       	ret

00001428 <__fp_split3>:
    1428:	57 fd       	sbrc	r21, 7
    142a:	90 58       	subi	r25, 0x80	; 128
    142c:	44 0f       	add	r20, r20
    142e:	55 1f       	adc	r21, r21
    1430:	59 f0       	breq	.+22     	; 0x1448 <__fp_splitA+0x10>
    1432:	5f 3f       	cpi	r21, 0xFF	; 255
    1434:	71 f0       	breq	.+28     	; 0x1452 <__fp_splitA+0x1a>
    1436:	47 95       	ror	r20

00001438 <__fp_splitA>:
    1438:	88 0f       	add	r24, r24
    143a:	97 fb       	bst	r25, 7
    143c:	99 1f       	adc	r25, r25
    143e:	61 f0       	breq	.+24     	; 0x1458 <__fp_splitA+0x20>
    1440:	9f 3f       	cpi	r25, 0xFF	; 255
    1442:	79 f0       	breq	.+30     	; 0x1462 <__fp_splitA+0x2a>
    1444:	87 95       	ror	r24
    1446:	08 95       	ret
    1448:	12 16       	cp	r1, r18
    144a:	13 06       	cpc	r1, r19
    144c:	14 06       	cpc	r1, r20
    144e:	55 1f       	adc	r21, r21
    1450:	f2 cf       	rjmp	.-28     	; 0x1436 <__fp_split3+0xe>
    1452:	46 95       	lsr	r20
    1454:	f1 df       	rcall	.-30     	; 0x1438 <__fp_splitA>
    1456:	08 c0       	rjmp	.+16     	; 0x1468 <__fp_splitA+0x30>
    1458:	16 16       	cp	r1, r22
    145a:	17 06       	cpc	r1, r23
    145c:	18 06       	cpc	r1, r24
    145e:	99 1f       	adc	r25, r25
    1460:	f1 cf       	rjmp	.-30     	; 0x1444 <__fp_splitA+0xc>
    1462:	86 95       	lsr	r24
    1464:	71 05       	cpc	r23, r1
    1466:	61 05       	cpc	r22, r1
    1468:	08 94       	sec
    146a:	08 95       	ret

0000146c <__fp_zero>:
    146c:	e8 94       	clt

0000146e <__fp_szero>:
    146e:	bb 27       	eor	r27, r27
    1470:	66 27       	eor	r22, r22
    1472:	77 27       	eor	r23, r23
    1474:	cb 01       	movw	r24, r22
    1476:	97 f9       	bld	r25, 7
    1478:	08 95       	ret

0000147a <__gesf2>:
    147a:	8a df       	rcall	.-236    	; 0x1390 <__fp_cmp>
    147c:	08 f4       	brcc	.+2      	; 0x1480 <__gesf2+0x6>
    147e:	8f ef       	ldi	r24, 0xFF	; 255
    1480:	08 95       	ret

00001482 <__mulsf3>:
    1482:	0b d0       	rcall	.+22     	; 0x149a <__mulsf3x>
    1484:	c0 cf       	rjmp	.-128    	; 0x1406 <__fp_round>
    1486:	b1 df       	rcall	.-158    	; 0x13ea <__fp_pscA>
    1488:	28 f0       	brcs	.+10     	; 0x1494 <__mulsf3+0x12>
    148a:	b6 df       	rcall	.-148    	; 0x13f8 <__fp_pscB>
    148c:	18 f0       	brcs	.+6      	; 0x1494 <__mulsf3+0x12>
    148e:	95 23       	and	r25, r21
    1490:	09 f0       	breq	.+2      	; 0x1494 <__mulsf3+0x12>
    1492:	a2 cf       	rjmp	.-188    	; 0x13d8 <__fp_inf>
    1494:	a7 cf       	rjmp	.-178    	; 0x13e4 <__fp_nan>
    1496:	11 24       	eor	r1, r1
    1498:	ea cf       	rjmp	.-44     	; 0x146e <__fp_szero>

0000149a <__mulsf3x>:
    149a:	c6 df       	rcall	.-116    	; 0x1428 <__fp_split3>
    149c:	a0 f3       	brcs	.-24     	; 0x1486 <__mulsf3+0x4>

0000149e <__mulsf3_pse>:
    149e:	95 9f       	mul	r25, r21
    14a0:	d1 f3       	breq	.-12     	; 0x1496 <__mulsf3+0x14>
    14a2:	95 0f       	add	r25, r21
    14a4:	50 e0       	ldi	r21, 0x00	; 0
    14a6:	55 1f       	adc	r21, r21
    14a8:	62 9f       	mul	r22, r18
    14aa:	f0 01       	movw	r30, r0
    14ac:	72 9f       	mul	r23, r18
    14ae:	bb 27       	eor	r27, r27
    14b0:	f0 0d       	add	r31, r0
    14b2:	b1 1d       	adc	r27, r1
    14b4:	63 9f       	mul	r22, r19
    14b6:	aa 27       	eor	r26, r26
    14b8:	f0 0d       	add	r31, r0
    14ba:	b1 1d       	adc	r27, r1
    14bc:	aa 1f       	adc	r26, r26
    14be:	64 9f       	mul	r22, r20
    14c0:	66 27       	eor	r22, r22
    14c2:	b0 0d       	add	r27, r0
    14c4:	a1 1d       	adc	r26, r1
    14c6:	66 1f       	adc	r22, r22
    14c8:	82 9f       	mul	r24, r18
    14ca:	22 27       	eor	r18, r18
    14cc:	b0 0d       	add	r27, r0
    14ce:	a1 1d       	adc	r26, r1
    14d0:	62 1f       	adc	r22, r18
    14d2:	73 9f       	mul	r23, r19
    14d4:	b0 0d       	add	r27, r0
    14d6:	a1 1d       	adc	r26, r1
    14d8:	62 1f       	adc	r22, r18
    14da:	83 9f       	mul	r24, r19
    14dc:	a0 0d       	add	r26, r0
    14de:	61 1d       	adc	r22, r1
    14e0:	22 1f       	adc	r18, r18
    14e2:	74 9f       	mul	r23, r20
    14e4:	33 27       	eor	r19, r19
    14e6:	a0 0d       	add	r26, r0
    14e8:	61 1d       	adc	r22, r1
    14ea:	23 1f       	adc	r18, r19
    14ec:	84 9f       	mul	r24, r20
    14ee:	60 0d       	add	r22, r0
    14f0:	21 1d       	adc	r18, r1
    14f2:	82 2f       	mov	r24, r18
    14f4:	76 2f       	mov	r23, r22
    14f6:	6a 2f       	mov	r22, r26
    14f8:	11 24       	eor	r1, r1
    14fa:	9f 57       	subi	r25, 0x7F	; 127
    14fc:	50 40       	sbci	r21, 0x00	; 0
    14fe:	8a f0       	brmi	.+34     	; 0x1522 <__mulsf3_pse+0x84>
    1500:	e1 f0       	breq	.+56     	; 0x153a <__mulsf3_pse+0x9c>
    1502:	88 23       	and	r24, r24
    1504:	4a f0       	brmi	.+18     	; 0x1518 <__mulsf3_pse+0x7a>
    1506:	ee 0f       	add	r30, r30
    1508:	ff 1f       	adc	r31, r31
    150a:	bb 1f       	adc	r27, r27
    150c:	66 1f       	adc	r22, r22
    150e:	77 1f       	adc	r23, r23
    1510:	88 1f       	adc	r24, r24
    1512:	91 50       	subi	r25, 0x01	; 1
    1514:	50 40       	sbci	r21, 0x00	; 0
    1516:	a9 f7       	brne	.-22     	; 0x1502 <__mulsf3_pse+0x64>
    1518:	9e 3f       	cpi	r25, 0xFE	; 254
    151a:	51 05       	cpc	r21, r1
    151c:	70 f0       	brcs	.+28     	; 0x153a <__mulsf3_pse+0x9c>
    151e:	5c cf       	rjmp	.-328    	; 0x13d8 <__fp_inf>
    1520:	a6 cf       	rjmp	.-180    	; 0x146e <__fp_szero>
    1522:	5f 3f       	cpi	r21, 0xFF	; 255
    1524:	ec f3       	brlt	.-6      	; 0x1520 <__mulsf3_pse+0x82>
    1526:	98 3e       	cpi	r25, 0xE8	; 232
    1528:	dc f3       	brlt	.-10     	; 0x1520 <__mulsf3_pse+0x82>
    152a:	86 95       	lsr	r24
    152c:	77 95       	ror	r23
    152e:	67 95       	ror	r22
    1530:	b7 95       	ror	r27
    1532:	f7 95       	ror	r31
    1534:	e7 95       	ror	r30
    1536:	9f 5f       	subi	r25, 0xFF	; 255
    1538:	c1 f7       	brne	.-16     	; 0x152a <__mulsf3_pse+0x8c>
    153a:	fe 2b       	or	r31, r30
    153c:	88 0f       	add	r24, r24
    153e:	91 1d       	adc	r25, r1
    1540:	96 95       	lsr	r25
    1542:	87 95       	ror	r24
    1544:	97 f9       	bld	r25, 7
    1546:	08 95       	ret

00001548 <__tablejump2__>:
    1548:	ee 0f       	add	r30, r30
    154a:	ff 1f       	adc	r31, r31
    154c:	00 24       	eor	r0, r0
    154e:	00 1c       	adc	r0, r0
    1550:	0b be       	out	0x3b, r0	; 59
    1552:	07 90       	elpm	r0, Z+
    1554:	f6 91       	elpm	r31, Z
    1556:	e0 2d       	mov	r30, r0
    1558:	09 94       	ijmp

0000155a <__umulhisi3>:
    155a:	a2 9f       	mul	r26, r18
    155c:	b0 01       	movw	r22, r0
    155e:	b3 9f       	mul	r27, r19
    1560:	c0 01       	movw	r24, r0
    1562:	a3 9f       	mul	r26, r19
    1564:	70 0d       	add	r23, r0
    1566:	81 1d       	adc	r24, r1
    1568:	11 24       	eor	r1, r1
    156a:	91 1d       	adc	r25, r1
    156c:	b2 9f       	mul	r27, r18
    156e:	70 0d       	add	r23, r0
    1570:	81 1d       	adc	r24, r1
    1572:	11 24       	eor	r1, r1
    1574:	91 1d       	adc	r25, r1
    1576:	08 95       	ret

00001578 <eeprom_read_byte>:
    1578:	f9 99       	sbic	0x1f, 1	; 31
    157a:	fe cf       	rjmp	.-4      	; 0x1578 <eeprom_read_byte>
    157c:	92 bd       	out	0x22, r25	; 34
    157e:	81 bd       	out	0x21, r24	; 33
    1580:	f8 9a       	sbi	0x1f, 0	; 31
    1582:	99 27       	eor	r25, r25
    1584:	80 b5       	in	r24, 0x20	; 32
    1586:	08 95       	ret

00001588 <eeprom_update_byte>:
    1588:	26 2f       	mov	r18, r22

0000158a <eeprom_update_r18>:
    158a:	f9 99       	sbic	0x1f, 1	; 31
    158c:	fe cf       	rjmp	.-4      	; 0x158a <eeprom_update_r18>
    158e:	92 bd       	out	0x22, r25	; 34
    1590:	81 bd       	out	0x21, r24	; 33
    1592:	f8 9a       	sbi	0x1f, 0	; 31
    1594:	01 97       	sbiw	r24, 0x01	; 1
    1596:	00 b4       	in	r0, 0x20	; 32
    1598:	02 16       	cp	r0, r18
    159a:	39 f0       	breq	.+14     	; 0x15aa <eeprom_update_r18+0x20>
    159c:	1f ba       	out	0x1f, r1	; 31
    159e:	20 bd       	out	0x20, r18	; 32
    15a0:	0f b6       	in	r0, 0x3f	; 63
    15a2:	f8 94       	cli
    15a4:	fa 9a       	sbi	0x1f, 2	; 31
    15a6:	f9 9a       	sbi	0x1f, 1	; 31
    15a8:	0f be       	out	0x3f, r0	; 63
    15aa:	08 95       	ret

000015ac <_exit>:
    15ac:	f8 94       	cli

000015ae <__stop_program>:
    15ae:	ff cf       	rjmp	.-2      	; 0x15ae <__stop_program>
